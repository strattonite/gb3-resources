
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+2406 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `/gb3-resources/processor/yscripts/sail.ys' --

1. Executing Verilog-2005 frontend: verilog/adder.v
Parsing Verilog input from `verilog/adder.v' to AST representation.
Generating RTLIL representation for module `\adder'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: verilog/cpu.v
Parsing Verilog input from `verilog/cpu.v' to AST representation.
Generating RTLIL representation for module `\cpu'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: verilog/mux2to1.v
Parsing Verilog input from `verilog/mux2to1.v' to AST representation.
Generating RTLIL representation for module `\mux2to1'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: verilog/alu_control.v
Parsing Verilog input from `verilog/alu_control.v' to AST representation.
Generating RTLIL representation for module `\ALUControl'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: verilog/pipeline_registers.v
Parsing Verilog input from `verilog/pipeline_registers.v' to AST representation.
Generating RTLIL representation for module `\if_id'.
Generating RTLIL representation for module `\id_ex'.
Generating RTLIL representation for module `\ex_mem'.
Generating RTLIL representation for module `\mem_wb'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: verilog/alu.v
Parsing Verilog input from `verilog/alu.v' to AST representation.
Generating RTLIL representation for module `\alu'.
Note: Assuming pure combinatorial block at verilog/alu.v:78.2-145.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at verilog/alu.v:147.2-158.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: verilog/program_counter.v
Parsing Verilog input from `verilog/program_counter.v' to AST representation.
Generating RTLIL representation for module `\program_counter'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: verilog/branch_decide.v
Parsing Verilog input from `verilog/branch_decide.v' to AST representation.
Generating RTLIL representation for module `\branch_decision'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: verilog/forwarding_unit.v
Parsing Verilog input from `verilog/forwarding_unit.v' to AST representation.
Generating RTLIL representation for module `\ForwardingUnit'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: verilog/branch_predictor.v
Parsing Verilog input from `verilog/branch_predictor.v' to AST representation.
Generating RTLIL representation for module `\branch_predictor'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: verilog/imm_gen.v
Parsing Verilog input from `verilog/imm_gen.v' to AST representation.
Generating RTLIL representation for module `\imm_gen'.
Note: Assuming pure combinatorial block at verilog/imm_gen.v:54.2-72.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: verilog/control_unit.v
Parsing Verilog input from `verilog/control_unit.v' to AST representation.
Generating RTLIL representation for module `\control'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: verilog/instruction_mem.v
Parsing Verilog input from `verilog/instruction_mem.v' to AST representation.
Generating RTLIL representation for module `\instruction_memory'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: verilog/data_mem.v
Parsing Verilog input from `verilog/data_mem.v' to AST representation.
Generating RTLIL representation for module `\data_mem'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: verilog/register_file.v
Parsing Verilog input from `verilog/register_file.v' to AST representation.
Generating RTLIL representation for module `\regfile'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: verilog/CSR.v
Parsing Verilog input from `verilog/CSR.v' to AST representation.
Generating RTLIL representation for module `\csr_file'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: verilog/dataMem_mask_gen.v
Parsing Verilog input from `verilog/dataMem_mask_gen.v' to AST representation.
Generating RTLIL representation for module `\sign_mask_gen'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: toplevel.v
Parsing Verilog input from `toplevel.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

19. Executing SYNTH_ICE40 pass.

19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

19.2. Executing HIERARCHY pass (managing design hierarchy).

19.2.1. Finding top of design hierarchy..
root of   2 design levels: top                 
root of   0 design levels: sign_mask_gen       
root of   0 design levels: csr_file            
root of   0 design levels: regfile             
root of   0 design levels: data_mem            
root of   0 design levels: instruction_memory  
root of   0 design levels: control             
root of   0 design levels: imm_gen             
root of   0 design levels: branch_predictor    
root of   0 design levels: ForwardingUnit      
root of   0 design levels: branch_decision     
root of   0 design levels: program_counter     
root of   0 design levels: alu                 
root of   0 design levels: mem_wb              
root of   0 design levels: ex_mem              
root of   0 design levels: id_ex               
root of   0 design levels: if_id               
root of   0 design levels: ALUControl          
root of   0 design levels: mux2to1             
root of   1 design levels: cpu                 
root of   0 design levels: adder               
Automatically selected top as design top module.

19.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:         \adder
Used module:         \id_ex
Used module:         \csr_file
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         \control
Used module:         \if_id
Used module:         \program_counter

19.2.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \data_mem
Used module:     \instruction_memory
Used module:     \cpu
Used module:         \mux2to1
Used module:         \branch_predictor
Used module:         \ForwardingUnit
Used module:         \mem_wb
Used module:         \branch_decision
Used module:         \ex_mem
Used module:         \alu
Used module:         \adder
Used module:         \id_ex
Used module:         \csr_file
Used module:         \sign_mask_gen
Used module:         \ALUControl
Used module:         \imm_gen
Used module:         \regfile
Used module:         \control
Used module:         \if_id
Used module:         \program_counter
Removed 0 unused modules.

19.3. Executing PROC pass (convert processes to netlists).

19.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `regfile.$proc$verilog/register_file.v:0$275'.
Removing empty process `instruction_memory.$proc$verilog/instruction_mem.v:0$166'.
Cleaned up 0 empty switches.

19.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$verilog/dataMem_mask_gen.v:58$283 in module sign_mask_gen.
Marked 1 switch rules as full_case in process $proc$verilog/data_mem.v:241$236 in module data_mem.
Marked 1 switch rules as full_case in process $proc$verilog/imm_gen.v:54$102 in module imm_gen.
Marked 1 switch rules as full_case in process $proc$verilog/alu.v:147$32 in module alu.
Marked 1 switch rules as full_case in process $proc$verilog/alu.v:78$18 in module alu.
Removed 5 dead cases from process $proc$verilog/alu_control.v:82$8 in module ALUControl.
Marked 10 switch rules as full_case in process $proc$verilog/alu_control.v:82$8 in module ALUControl.
Removed a total of 5 dead cases.

19.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 35 assignments to connections.

19.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\data_mem.$proc$verilog/data_mem.v:0$251'.
  Set init value: \clk_stall = 1'0
Found init rule in `\data_mem.$proc$verilog/data_mem.v:60$250'.
  Set init value: \state = 0
Found init rule in `\instruction_memory.$proc$verilog/instruction_mem.v:61$165'.
  Set init value: \state = 0
Found init rule in `\imm_gen.$proc$verilog/imm_gen.v:0$103'.
  Set init value: \imm = 0
Found init rule in `\branch_predictor.$proc$verilog/branch_predictor.v:0$101'.
  Set init value: \s = 2'00
  Set init value: \branch_mem_sig_reg = 1'0
Found init rule in `\program_counter.$proc$verilog/program_counter.v:0$42'.
  Set init value: \outAddr = 0
Found init rule in `\alu.$proc$verilog/alu.v:0$40'.
  Set init value: \ALUOut = 0
  Set init value: \Branch_Enable = 1'0
Found init rule in `\mem_wb.$proc$verilog/pipeline_registers.v:0$17'.
  Set init value: \data_out = 117'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\ex_mem.$proc$verilog/pipeline_registers.v:0$15'.
  Set init value: \data_out = 155'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\id_ex.$proc$verilog/pipeline_registers.v:0$13'.
  Set init value: \data_out = 178'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\if_id.$proc$verilog/pipeline_registers.v:0$11'.
  Set init value: \data_out = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\ALUControl.$proc$verilog/alu_control.v:0$9'.
  Set init value: \ALUCtl = 7'0000000

19.3.5. Executing PROC_ARST pass (detect async resets in processes).

19.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\top.$proc$toplevel.v:53$288'.
Creating decoders for process `\top.$proc$toplevel.v:52$287'.
Creating decoders for process `\sign_mask_gen.$proc$verilog/dataMem_mask_gen.v:58$283'.
     1/1: $1\mask[2:0]
Creating decoders for process `\csr_file.$proc$verilog/CSR.v:57$277'.
     1/3: $0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280
     2/3: $0$memwr$\csr_file$verilog/CSR.v:59$276_DATA[31:0]$279
     3/3: $0$memwr$\csr_file$verilog/CSR.v:59$276_ADDR[11:0]$278
Creating decoders for process `\regfile.$proc$verilog/register_file.v:95$254'.
     1/3: $0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257
     2/3: $0$memwr$\regfile$verilog/register_file.v:97$253_DATA[31:0]$256
     3/3: $0$memwr$\regfile$verilog/register_file.v:97$253_ADDR[4:0]$255
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:0$251'.
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:60$250'.
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:241$236'.
     1/12: $0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239
     2/12: $0$memwr$\data_block$verilog/data_mem.v:284$167_DATA[31:0]$238
     3/12: $0$memwr$\data_block$verilog/data_mem.v:284$167_ADDR[31:0]$237
     4/12: $0\sign_mask_buf[3:0]
     5/12: $0\addr_buf[31:0]
     6/12: $0\write_data_buffer[31:0]
     7/12: $0\memwrite_buf[0:0]
     8/12: $0\memread_buf[0:0]
     9/12: $0\word_buf[31:0]
    10/12: $0\state[31:0]
    11/12: $0\read_data[31:0]
    12/12: $0\clk_stall[0:0]
Creating decoders for process `\data_mem.$proc$verilog/data_mem.v:232$232'.
     1/1: $0\led_reg[31:0]
Creating decoders for process `\instruction_memory.$proc$verilog/instruction_mem.v:61$165'.
Creating decoders for process `\instruction_memory.$proc$verilog/instruction_mem.v:89$160'.
     1/4: $0\state[31:0]
     2/4: $0\read_data[31:0]
     3/4: $0\previous_addr[31:0]
     4/4: $0\clk_stall[0:0]
Creating decoders for process `\imm_gen.$proc$verilog/imm_gen.v:0$103'.
Creating decoders for process `\imm_gen.$proc$verilog/imm_gen.v:54$102'.
     1/1: $1\imm[31:0]
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:0$101'.
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:101$86'.
     1/2: $0\s[1:0] [1]
     2/2: $0\s[1:0] [0]
Creating decoders for process `\branch_predictor.$proc$verilog/branch_predictor.v:92$85'.
Creating decoders for process `\program_counter.$proc$verilog/program_counter.v:0$42'.
Creating decoders for process `\program_counter.$proc$verilog/program_counter.v:65$41'.
Creating decoders for process `\alu.$proc$verilog/alu.v:0$40'.
Creating decoders for process `\alu.$proc$verilog/alu.v:147$32'.
     1/1: $1\Branch_Enable[0:0]
Creating decoders for process `\alu.$proc$verilog/alu.v:78$18'.
     1/1: $1\ALUOut[31:0]
Creating decoders for process `\mem_wb.$proc$verilog/pipeline_registers.v:0$17'.
Creating decoders for process `\mem_wb.$proc$verilog/pipeline_registers.v:145$16'.
Creating decoders for process `\ex_mem.$proc$verilog/pipeline_registers.v:0$15'.
Creating decoders for process `\ex_mem.$proc$verilog/pipeline_registers.v:118$14'.
Creating decoders for process `\id_ex.$proc$verilog/pipeline_registers.v:0$13'.
Creating decoders for process `\id_ex.$proc$verilog/pipeline_registers.v:91$12'.
Creating decoders for process `\if_id.$proc$verilog/pipeline_registers.v:0$11'.
Creating decoders for process `\if_id.$proc$verilog/pipeline_registers.v:64$10'.
Creating decoders for process `\ALUControl.$proc$verilog/alu_control.v:0$9'.
Creating decoders for process `\ALUControl.$proc$verilog/alu_control.v:82$8'.
     1/10: $10\ALUCtl[6:0]
     2/10: $9\ALUCtl[6:0]
     3/10: $8\ALUCtl[6:0]
     4/10: $7\ALUCtl[6:0]
     5/10: $6\ALUCtl[6:0]
     6/10: $5\ALUCtl[6:0]
     7/10: $4\ALUCtl[6:0]
     8/10: $3\ALUCtl[6:0]
     9/10: $2\ALUCtl[6:0]
    10/10: $1\ALUCtl[6:0]

19.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.\CLKHF_POWERUP' from process `\top.$proc$toplevel.v:53$288'.
No latch inferred for signal `\top.\ENCLKHF' from process `\top.$proc$toplevel.v:52$287'.
No latch inferred for signal `\sign_mask_gen.\mask' from process `\sign_mask_gen.$proc$verilog/dataMem_mask_gen.v:58$283'.
No latch inferred for signal `\imm_gen.\imm' from process `\imm_gen.$proc$verilog/imm_gen.v:54$102'.
No latch inferred for signal `\alu.\Branch_Enable' from process `\alu.$proc$verilog/alu.v:147$32'.
No latch inferred for signal `\alu.\ALUOut' from process `\alu.$proc$verilog/alu.v:78$18'.
No latch inferred for signal `\ALUControl.\ALUCtl' from process `\ALUControl.$proc$verilog/alu_control.v:82$8'.

19.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\csr_file.\rdVal_CSR' using process `\csr_file.$proc$verilog/CSR.v:57$277'.
  created $dff cell `$procdff$880' with positive edge clock.
Creating register for signal `\csr_file.$memwr$\csr_file$verilog/CSR.v:59$276_ADDR' using process `\csr_file.$proc$verilog/CSR.v:57$277'.
  created $dff cell `$procdff$881' with positive edge clock.
Creating register for signal `\csr_file.$memwr$\csr_file$verilog/CSR.v:59$276_DATA' using process `\csr_file.$proc$verilog/CSR.v:57$277'.
  created $dff cell `$procdff$882' with positive edge clock.
Creating register for signal `\csr_file.$memwr$\csr_file$verilog/CSR.v:59$276_EN' using process `\csr_file.$proc$verilog/CSR.v:57$277'.
  created $dff cell `$procdff$883' with positive edge clock.
Creating register for signal `\regfile.\rdAddrA_buf' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$884' with positive edge clock.
Creating register for signal `\regfile.\rdAddrB_buf' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$885' with positive edge clock.
Creating register for signal `\regfile.\regDatA' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$886' with positive edge clock.
Creating register for signal `\regfile.\regDatB' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$887' with positive edge clock.
Creating register for signal `\regfile.\wrAddr_buf' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$888' with positive edge clock.
Creating register for signal `\regfile.\wrData_buf' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$889' with positive edge clock.
Creating register for signal `\regfile.\write_buf' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$890' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$verilog/register_file.v:97$253_ADDR' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$891' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$verilog/register_file.v:97$253_DATA' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$892' with positive edge clock.
Creating register for signal `\regfile.$memwr$\regfile$verilog/register_file.v:97$253_EN' using process `\regfile.$proc$verilog/register_file.v:95$254'.
  created $dff cell `$procdff$893' with positive edge clock.
Creating register for signal `\data_mem.\clk_stall' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$894' with positive edge clock.
Creating register for signal `\data_mem.\read_data' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$895' with positive edge clock.
Creating register for signal `\data_mem.\state' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$896' with positive edge clock.
Creating register for signal `\data_mem.\word_buf' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$897' with positive edge clock.
Creating register for signal `\data_mem.\memread_buf' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$898' with positive edge clock.
Creating register for signal `\data_mem.\memwrite_buf' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$899' with positive edge clock.
Creating register for signal `\data_mem.\write_data_buffer' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$900' with positive edge clock.
Creating register for signal `\data_mem.\addr_buf' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$901' with positive edge clock.
Creating register for signal `\data_mem.\sign_mask_buf' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$902' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$verilog/data_mem.v:284$167_ADDR' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$903' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$verilog/data_mem.v:284$167_DATA' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$904' with positive edge clock.
Creating register for signal `\data_mem.$memwr$\data_block$verilog/data_mem.v:284$167_EN' using process `\data_mem.$proc$verilog/data_mem.v:241$236'.
  created $dff cell `$procdff$905' with positive edge clock.
Creating register for signal `\data_mem.\led_reg' using process `\data_mem.$proc$verilog/data_mem.v:232$232'.
  created $dff cell `$procdff$906' with positive edge clock.
Creating register for signal `\instruction_memory.\clk_stall' using process `\instruction_memory.$proc$verilog/instruction_mem.v:89$160'.
  created $dff cell `$procdff$907' with positive edge clock.
Creating register for signal `\instruction_memory.\previous_addr' using process `\instruction_memory.$proc$verilog/instruction_mem.v:89$160'.
  created $dff cell `$procdff$908' with positive edge clock.
Creating register for signal `\instruction_memory.\read_data' using process `\instruction_memory.$proc$verilog/instruction_mem.v:89$160'.
  created $dff cell `$procdff$909' with positive edge clock.
Creating register for signal `\instruction_memory.\state' using process `\instruction_memory.$proc$verilog/instruction_mem.v:89$160'.
  created $dff cell `$procdff$910' with positive edge clock.
Creating register for signal `\branch_predictor.\s' using process `\branch_predictor.$proc$verilog/branch_predictor.v:101$86'.
  created $dff cell `$procdff$911' with positive edge clock.
Creating register for signal `\branch_predictor.\branch_mem_sig_reg' using process `\branch_predictor.$proc$verilog/branch_predictor.v:92$85'.
  created $dff cell `$procdff$912' with negative edge clock.
Creating register for signal `\program_counter.\outAddr' using process `\program_counter.$proc$verilog/program_counter.v:65$41'.
  created $dff cell `$procdff$913' with positive edge clock.
Creating register for signal `\mem_wb.\data_out' using process `\mem_wb.$proc$verilog/pipeline_registers.v:145$16'.
  created $dff cell `$procdff$914' with positive edge clock.
Creating register for signal `\ex_mem.\data_out' using process `\ex_mem.$proc$verilog/pipeline_registers.v:118$14'.
  created $dff cell `$procdff$915' with positive edge clock.
Creating register for signal `\id_ex.\data_out' using process `\id_ex.$proc$verilog/pipeline_registers.v:91$12'.
  created $dff cell `$procdff$916' with positive edge clock.
Creating register for signal `\if_id.\data_out' using process `\if_id.$proc$verilog/pipeline_registers.v:64$10'.
  created $dff cell `$procdff$917' with positive edge clock.

19.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `top.$proc$toplevel.v:53$288'.
Removing empty process `top.$proc$toplevel.v:52$287'.
Found and cleaned up 1 empty switch in `\sign_mask_gen.$proc$verilog/dataMem_mask_gen.v:58$283'.
Removing empty process `sign_mask_gen.$proc$verilog/dataMem_mask_gen.v:58$283'.
Found and cleaned up 1 empty switch in `\csr_file.$proc$verilog/CSR.v:57$277'.
Removing empty process `csr_file.$proc$verilog/CSR.v:57$277'.
Found and cleaned up 1 empty switch in `\regfile.$proc$verilog/register_file.v:95$254'.
Removing empty process `regfile.$proc$verilog/register_file.v:95$254'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:0$251'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:60$250'.
Found and cleaned up 4 empty switches in `\data_mem.$proc$verilog/data_mem.v:241$236'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:241$236'.
Found and cleaned up 1 empty switch in `\data_mem.$proc$verilog/data_mem.v:232$232'.
Removing empty process `data_mem.$proc$verilog/data_mem.v:232$232'.
Removing empty process `instruction_memory.$proc$verilog/instruction_mem.v:61$165'.
Found and cleaned up 2 empty switches in `\instruction_memory.$proc$verilog/instruction_mem.v:89$160'.
Removing empty process `instruction_memory.$proc$verilog/instruction_mem.v:89$160'.
Removing empty process `imm_gen.$proc$verilog/imm_gen.v:0$103'.
Found and cleaned up 1 empty switch in `\imm_gen.$proc$verilog/imm_gen.v:54$102'.
Removing empty process `imm_gen.$proc$verilog/imm_gen.v:54$102'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:0$101'.
Found and cleaned up 1 empty switch in `\branch_predictor.$proc$verilog/branch_predictor.v:101$86'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:101$86'.
Removing empty process `branch_predictor.$proc$verilog/branch_predictor.v:92$85'.
Removing empty process `program_counter.$proc$verilog/program_counter.v:0$42'.
Removing empty process `program_counter.$proc$verilog/program_counter.v:65$41'.
Removing empty process `alu.$proc$verilog/alu.v:0$40'.
Found and cleaned up 1 empty switch in `\alu.$proc$verilog/alu.v:147$32'.
Removing empty process `alu.$proc$verilog/alu.v:147$32'.
Found and cleaned up 1 empty switch in `\alu.$proc$verilog/alu.v:78$18'.
Removing empty process `alu.$proc$verilog/alu.v:78$18'.
Removing empty process `mem_wb.$proc$verilog/pipeline_registers.v:0$17'.
Removing empty process `mem_wb.$proc$verilog/pipeline_registers.v:145$16'.
Removing empty process `ex_mem.$proc$verilog/pipeline_registers.v:0$15'.
Removing empty process `ex_mem.$proc$verilog/pipeline_registers.v:118$14'.
Removing empty process `id_ex.$proc$verilog/pipeline_registers.v:0$13'.
Removing empty process `id_ex.$proc$verilog/pipeline_registers.v:91$12'.
Removing empty process `if_id.$proc$verilog/pipeline_registers.v:0$11'.
Removing empty process `if_id.$proc$verilog/pipeline_registers.v:64$10'.
Removing empty process `ALUControl.$proc$verilog/alu_control.v:0$9'.
Found and cleaned up 10 empty switches in `\ALUControl.$proc$verilog/alu_control.v:82$8'.
Removing empty process `ALUControl.$proc$verilog/alu_control.v:82$8'.
Cleaned up 24 empty switches.

19.4. Executing FLATTEN pass (flatten design).
Using template instruction_memory for cells of type instruction_memory.
Using template data_mem for cells of type data_mem.
Using template cpu for cells of type cpu.
Using template mux2to1 for cells of type mux2to1.
Using template mem_wb for cells of type mem_wb.
Using template branch_decision for cells of type branch_decision.
Using template control for cells of type control.
Using template adder for cells of type adder.
Using template program_counter for cells of type program_counter.
Using template if_id for cells of type if_id.
Using template imm_gen for cells of type imm_gen.
Using template branch_predictor for cells of type branch_predictor.
Using template csr_file for cells of type csr_file.
Using template regfile for cells of type regfile.
Using template sign_mask_gen for cells of type sign_mask_gen.
Using template ALUControl for cells of type ALUControl.
Using template id_ex for cells of type id_ex.
Using template ForwardingUnit for cells of type ForwardingUnit.
Using template alu for cells of type alu.
Using template ex_mem for cells of type ex_mem.
<suppressed ~44 debug messages>
No more expansions possible.
Deleting now unused module sign_mask_gen.
Deleting now unused module csr_file.
Deleting now unused module regfile.
Deleting now unused module data_mem.
Deleting now unused module instruction_memory.
Deleting now unused module control.
Deleting now unused module imm_gen.
Deleting now unused module branch_predictor.
Deleting now unused module ForwardingUnit.
Deleting now unused module branch_decision.
Deleting now unused module program_counter.
Deleting now unused module alu.
Deleting now unused module mem_wb.
Deleting now unused module ex_mem.
Deleting now unused module id_ex.
Deleting now unused module if_id.
Deleting now unused module ALUControl.
Deleting now unused module mux2to1.
Deleting now unused module cpu.
Deleting now unused module adder.

19.5. Executing TRIBUF pass.

19.6. Executing DEMINOUT pass (demote inout ports to input or output).

19.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~53 debug messages>

19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 198 unused wires.
<suppressed ~1 debug messages>

19.9. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

19.10. Executing OPT pass (performing simple optimizations).

19.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~294 debug messages>
Removed a total of 98 cells.

19.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$763.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$772.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$774.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$788.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$790.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$803.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$811.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$813.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$827.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$838.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$852.
    dead port 2/2 on $mux $techmap\processor.alu_control.$procmux$868.
Removed 12 multiplexer ports.
<suppressed ~52 debug messages>

19.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\processor.ControlAndStatus_registers.$procmux$634:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280
      New ports: A=1'0, B=1'1, Y=$techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0]
      New connections: $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [31:1] = { $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] $techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_EN[31:0]$280 [0] }
    New ctrl vector for $pmux cell $techmap\processor.alu_control.$procmux$794: { $techmap\processor.alu_control.$procmux$789_CMP $techmap\processor.alu_control.$procmux$801_CMP $auto$opt_reduce.cc:134:opt_mux$919 $techmap\processor.alu_control.$procmux$798_CMP $techmap\processor.alu_control.$procmux$773_CMP $techmap\processor.alu_control.$procmux$796_CMP $techmap\processor.alu_control.$procmux$795_CMP }
    New ctrl vector for $pmux cell $techmap\processor.alu_control.$procmux$818: { $techmap\processor.alu_control.$procmux$789_CMP $auto$opt_reduce.cc:134:opt_mux$921 $techmap\processor.alu_control.$procmux$798_CMP $techmap\processor.alu_control.$procmux$796_CMP $techmap\processor.alu_control.$procmux$795_CMP $techmap\processor.alu_control.$procmux$801_CMP $techmap\processor.alu_control.$procmux$773_CMP }
    New ctrl vector for $pmux cell $techmap\processor.alu_control.$procmux$834: $auto$opt_reduce.cc:134:opt_mux$923
    New ctrl vector for $pmux cell $techmap\processor.alu_control.$procmux$846: $auto$opt_reduce.cc:134:opt_mux$925
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$procmux$646:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239
      New ports: A=1'0, B=1'1, Y=$techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0]
      New connections: $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [31:1] = { $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] $techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_EN[31:0]$239 [0] }
    New ctrl vector for $pmux cell $techmap\processor.alu_control.$procmux$871: { $auto$opt_reduce.cc:134:opt_mux$927 $techmap\processor.alu_control.$procmux$869_CMP $techmap\processor.alu_control.$procmux$853_CMP $techmap\processor.alu_control.$procmux$839_CMP $techmap\processor.alu_control.$procmux$814_CMP $techmap\processor.alu_control.$procmux$775_CMP $techmap\processor.alu_control.$procmux$764_CMP }
    New ctrl vector for $pmux cell $techmap\processor.alu_main.$procmux$744: { $techmap\processor.alu_main.$procmux$756_CMP $techmap\processor.alu_main.$procmux$754_CMP $techmap\processor.alu_main.$procmux$753_CMP $techmap\processor.alu_main.$procmux$752_CMP $techmap\processor.alu_main.$procmux$751_CMP $techmap\processor.alu_main.$procmux$750_CMP $techmap\processor.alu_main.$procmux$749_CMP $techmap\processor.alu_main.$procmux$748_CMP $techmap\processor.alu_main.$procmux$747_CMP $auto$opt_reduce.cc:134:opt_mux$929 $techmap\processor.alu_main.$procmux$745_CMP }
    New ctrl vector for $pmux cell $techmap\data_mem_inst.$procmux$681: { $techmap\data_mem_inst.$procmux$656_CMP $techmap\data_mem_inst.$procmux$680_CMP $auto$opt_reduce.cc:134:opt_mux$931 }
    New ctrl vector for $pmux cell $techmap\data_mem_inst.$procmux$696: { $techmap\data_mem_inst.$procmux$656_CMP $auto$opt_reduce.cc:134:opt_mux$933 }
    New ctrl vector for $pmux cell $techmap\processor.immediate_generator.$procmux$724: { $techmap\processor.immediate_generator.$procmux$730_CMP $techmap\processor.immediate_generator.$procmux$729_CMP $auto$opt_reduce.cc:134:opt_mux$935 $techmap\processor.immediate_generator.$procmux$726_CMP $techmap\processor.immediate_generator.$procmux$725_CMP }
    Consolidated identical input bits for $mux cell $techmap\processor.register_files.$procmux$640:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257
      New ports: A=1'0, B=1'1, Y=$techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0]
      New connections: $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [31:1] = { $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] $techmap\processor.register_files.$0$memwr$\regfile$verilog/register_file.v:97$253_EN[31:0]$257 [0] }
  Optimizing cells in module \top.
Performed a total of 12 changes.

19.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

19.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

19.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 113 unused wires.
<suppressed ~1 debug messages>

19.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.10.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~53 debug messages>

19.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

19.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.10.16. Finished OPT passes. (There is nothing left to do.)

19.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 22 address bits (of 32) from memory init port top.$techmap\data_mem_inst.$meminit$\data_block$verilog/data_mem.v:0$248 (data_mem_inst.data_block).
Removed top 22 address bits (of 32) from memory read port top.$techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:262$243 (data_mem_inst.data_block).
Removed top 22 address bits (of 32) from memory write port top.$techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:0$249 (data_mem_inst.data_block).
Removed top 22 address bits (of 32) from memory init port top.$techmap\inst_mem.$meminit$\instruction_memory$verilog/instruction_mem.v:0$164 (inst_mem.instruction_memory).
Removed top 22 address bits (of 32) from memory read port top.$techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:105$162 (inst_mem.instruction_memory).
Removed top 2 address bits (of 12) from memory read port top.$techmap\processor.ControlAndStatus_registers.$memrd$\csr_file$verilog/CSR.v:61$281 (processor.ControlAndStatus_registers.csr_file).
Removed top 2 address bits (of 12) from memory write port top.$techmap\processor.ControlAndStatus_registers.$memwr$\csr_file$verilog/CSR.v:0$282 (processor.ControlAndStatus_registers.csr_file).
Removed top 27 address bits (of 32) from memory init port top.$techmap\processor.register_files.$meminit$\regfile$verilog/register_file.v:0$273 (processor.register_files.regfile).
Removed top 31 bits (of 32) from port B of cell top.$techmap\inst_mem.$procmux$706_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\inst_mem.$procmux$705_CMP0 ($eq).
Removed top 31 bits (of 32) from FF cell top.$techmap\data_mem_inst.$procdff$905 ($dff).
Removed top 22 bits (of 32) from FF cell top.$techmap\data_mem_inst.$procdff$903 ($dff).
Removed top 30 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$procmux$683_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$procmux$680_CMP0 ($eq).
Removed cell top.$techmap\data_mem_inst.$procmux$650 ($mux).
Removed cell top.$techmap\data_mem_inst.$procmux$648 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$procmux$647_CMP0 ($eq).
Removed top 19 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:262$244 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:262$244 ($sub).
Removed top 12 bits (of 13) from port B of cell top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:262$244 ($sub).
Removed top 18 bits (of 32) from port B of cell top.$techmap\data_mem_inst.$eq$verilog/data_mem.v:233$234 ($eq).
Removed top 29 bits (of 32) from port A of cell top.$techmap\processor.pc_adder.$add$verilog/adder.v:53$1 ($add).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.immediate_generator.$procmux$729_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.immediate_generator.$procmux$728_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\processor.immediate_generator.$procmux$727_CMP0 ($eq).
Removed top 1 bits (of 32) from mux cell top.$techmap\processor.immediate_generator.$procmux$724 ($pmux).
Removed top 21 bits (of 32) from mux cell top.$techmap\processor.cont_mux.$ternary$verilog/mux2to1.v:50$7 ($mux).
Removed top 27 bits (of 32) from mux cell top.$techmap\processor.RegB_AddrFwdFlush_mux.$ternary$verilog/mux2to1.v:50$7 ($mux).
Removed top 27 bits (of 32) from mux cell top.$techmap\processor.RegA_AddrFwdFlush_mux.$ternary$verilog/mux2to1.v:50$7 ($mux).
Removed top 31 bits (of 32) from FF cell top.$techmap\processor.ControlAndStatus_registers.$procdff$883 ($dff).
Removed top 2 bits (of 12) from FF cell top.$techmap\processor.ControlAndStatus_registers.$procdff$881 ($dff).
Removed cell top.$techmap\processor.ControlAndStatus_registers.$procmux$638 ($mux).
Removed cell top.$techmap\processor.ControlAndStatus_registers.$procmux$636 ($mux).
Removed top 31 bits (of 32) from FF cell top.$techmap\processor.register_files.$procdff$893 ($dff).
Removed top 27 bits (of 32) from FF cell top.$techmap\processor.register_files.$procdff$888 ($dff).
Removed cell top.$techmap\processor.register_files.$procmux$644 ($mux).
Removed cell top.$techmap\processor.register_files.$procmux$642 ($mux).
Removed top 27 bits (of 32) from port A of cell top.$techmap\processor.register_files.$eq$verilog/register_file.v:109$268 ($eq).
Removed top 27 bits (of 32) from port A of cell top.$techmap\processor.register_files.$eq$verilog/register_file.v:108$263 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$879_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$878_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$853_CMP0 ($eq).
Removed top 3 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$846 ($mux).
Removed top 1 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$839_CMP0 ($eq).
Removed top 3 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$834 ($mux).
Removed top 2 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$814_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\processor.alu_control.$procmux$801_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_control.$procmux$800_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_control.$procmux$799_CMP0 ($eq).
Removed top 4 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$785 ($pmux).
Removed top 1 bits (of 7) from port B of cell top.$techmap\processor.alu_control.$procmux$775_CMP0 ($eq).
Removed top 4 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$769 ($pmux).
Removed top 1 bits (of 2) from port B of cell top.$techmap\processor.alu_control.$procmux$762_CMP0 ($eq).
Removed top 4 bits (of 7) from mux cell top.$techmap\processor.alu_control.$procmux$759 ($pmux).
Removed top 3 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$procmux$755_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$procmux$754_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$procmux$753_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$procmux$752_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$procmux$751_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$procmux$750_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\processor.alu_main.$procmux$749_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\processor.alu_main.$procmux$742_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_main.$procmux$741_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\processor.alu_main.$procmux$740_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell top.$techmap\processor.alu_main.$ternary$verilog/alu.v:103$24 ($mux).
Removed top 23 bits (of 32) from mux cell top.$techmap\processor.ex_cont_mux.$ternary$verilog/mux2to1.v:50$7 ($mux).
Removed top 22 bits (of 32) from wire top.$techmap\data_mem_inst.$0$memwr$\data_block$verilog/data_mem.v:284$167_ADDR[31:0]$237.
Removed top 22 bits (of 32) from wire top.$techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:284$167_ADDR.
Removed top 22 bits (of 32) from wire top.$techmap\data_mem_inst.$sub$verilog/data_mem.v:262$244_Y.
Removed top 2 bits (of 12) from wire top.$techmap\processor.ControlAndStatus_registers.$0$memwr$\csr_file$verilog/CSR.v:59$276_ADDR[11:0]$278.
Removed top 2 bits (of 12) from wire top.$techmap\processor.ControlAndStatus_registers.$memwr$\csr_file$verilog/CSR.v:59$276_ADDR.
Removed top 4 bits (of 7) from wire top.$techmap\processor.alu_control.$10\ALUCtl[6:0].
Removed top 3 bits (of 7) from wire top.$techmap\processor.alu_control.$3\ALUCtl[6:0].
Removed top 5 bits (of 7) from wire top.$techmap\processor.alu_control.$4\ALUCtl[6:0].
Removed top 4 bits (of 7) from wire top.$techmap\processor.alu_control.$6\ALUCtl[6:0].
Removed top 4 bits (of 7) from wire top.$techmap\processor.alu_control.$8\ALUCtl[6:0].
Removed top 31 bits (of 32) from wire top.$techmap\processor.alu_main.$ternary$verilog/alu.v:103$24_Y.
Removed top 27 bits (of 32) from wire top.processor.RegA_AddrFwdFlush_mux.input0.
Removed top 27 bits (of 32) from wire top.processor.RegA_AddrFwdFlush_mux.out.
Removed top 27 bits (of 32) from wire top.processor.RegA_mux.input1.
Removed top 27 bits (of 32) from wire top.processor.RegB_AddrFwdFlush_mux.input0.
Removed top 27 bits (of 32) from wire top.processor.RegB_AddrFwdFlush_mux.out.
Removed top 21 bits (of 32) from wire top.processor.cont_mux.input0.
Removed top 21 bits (of 32) from wire top.processor.cont_mux.out.
Removed top 23 bits (of 32) from wire top.processor.ex_cont_mux.input0.
Removed top 23 bits (of 32) from wire top.processor.ex_cont_mux.out.
Removed top 3 bits (of 155) from wire top.processor.ex_mem_reg.data_in.
Removed top 10 bits (of 12) from wire top.processor.forwarding_unit.EX_CSRR_Addr.
Removed top 10 bits (of 178) from wire top.processor.id_ex_out.
Removed top 27 bits (of 32) from wire top.processor.register_files.wrAddr_buf.
Removed top 1 bits (of 32) from wire top.processor.register_files.wrData_buf.
Removed top 3 bits (of 32) from wire top.processor.wb_fwd1_mux.out.
Removed top 6 bits (of 32) from wire top.processor.wb_fwd1_mux_out.

19.12. Executing PEEPOPT pass (run peephole optimizers).

19.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

19.14. Executing SHARE pass (SAT-based resource sharing).
Found 5 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\processor.alu_main.$sshr$verilog/alu.v:113$26 ($sshr):
    Found 3 activation_patterns using ctrl signal { $techmap\processor.alu_main.$procmux$741_CMP $techmap\processor.alu_main.$procmux$742_CMP $techmap\processor.alu_main.$procmux$750_CMP \processor.id_ex_reg.data_out [9] }.
    No candidates found.
  Analyzing resource sharing options for $techmap\processor.alu_main.$shr$verilog/alu.v:108$25 ($shr):
    Found 3 activation_patterns using ctrl signal { $techmap\processor.alu_main.$procmux$741_CMP $techmap\processor.alu_main.$procmux$742_CMP $techmap\processor.alu_main.$procmux$751_CMP \processor.id_ex_reg.data_out [9] }.
    No candidates found.
  Analyzing resource sharing options for $techmap\processor.alu_main.$shl$verilog/alu.v:118$27 ($shl):
    Found 3 activation_patterns using ctrl signal { $techmap\processor.alu_main.$procmux$741_CMP $techmap\processor.alu_main.$procmux$742_CMP $techmap\processor.alu_main.$procmux$749_CMP \processor.id_ex_reg.data_out [9] }.
    No candidates found.
  Analyzing resource sharing options for $techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:105$162 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\inst_mem.$procmux$705_CMP.
    No candidates found.
  Analyzing resource sharing options for $techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:262$243 ($memrd):
    Found 1 activation_patterns using ctrl signal $techmap\data_mem_inst.$procmux$680_CMP.
    No candidates found.

19.15. Executing TECHMAP pass (map to technology primitives).

19.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

19.15.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~108 debug messages>

19.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

19.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

19.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $techmap\processor.addr_adder.$add$verilog/adder.v:53$1 ($add).
  creating $macc model for $techmap\processor.alu_main.$add$verilog/alu.v:93$21 ($add).
  creating $macc model for $techmap\processor.alu_main.$sub$verilog/alu.v:98$22 ($sub).
  creating $macc model for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:108$99 ($add).
  creating $macc model for $techmap\processor.pc_adder.$add$verilog/adder.v:53$1 ($add).
  creating $alu model for $macc $techmap\processor.pc_adder.$add$verilog/adder.v:53$1.
  creating $alu model for $macc $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:108$99.
  creating $alu model for $macc $techmap\processor.alu_main.$sub$verilog/alu.v:98$22.
  creating $alu model for $macc $techmap\processor.alu_main.$add$verilog/alu.v:93$21.
  creating $alu model for $macc $techmap\processor.addr_adder.$add$verilog/adder.v:53$1.
  creating $alu model for $techmap\processor.alu_main.$ge$verilog/alu.v:152$37 ($ge): new $alu
  creating $alu model for $techmap\processor.alu_main.$ge$verilog/alu.v:154$39 ($ge): new $alu
  creating $alu model for $techmap\processor.alu_main.$lt$verilog/alu.v:103$23 ($lt): merged with $techmap\processor.alu_main.$ge$verilog/alu.v:152$37.
  creating $alu model for $techmap\processor.alu_main.$lt$verilog/alu.v:153$38 ($lt): merged with $techmap\processor.alu_main.$ge$verilog/alu.v:154$39.
  creating $alu cell for $techmap\processor.addr_adder.$add$verilog/adder.v:53$1: $auto$alumacc.cc:485:replace_alu$965
  creating $alu cell for $techmap\processor.alu_main.$ge$verilog/alu.v:154$39, $techmap\processor.alu_main.$lt$verilog/alu.v:153$38: $auto$alumacc.cc:485:replace_alu$968
  creating $alu cell for $techmap\processor.alu_main.$ge$verilog/alu.v:152$37, $techmap\processor.alu_main.$lt$verilog/alu.v:103$23: $auto$alumacc.cc:485:replace_alu$981
  creating $alu cell for $techmap\processor.alu_main.$add$verilog/alu.v:93$21: $auto$alumacc.cc:485:replace_alu$996
  creating $alu cell for $techmap\processor.alu_main.$sub$verilog/alu.v:98$22: $auto$alumacc.cc:485:replace_alu$999
  creating $alu cell for $techmap\processor.branch_predictor_FSM.$add$verilog/branch_predictor.v:108$99: $auto$alumacc.cc:485:replace_alu$1002
  creating $alu cell for $techmap\processor.pc_adder.$add$verilog/adder.v:53$1: $auto$alumacc.cc:485:replace_alu$1005
  created 7 $alu and 0 $macc cells.

19.19. Executing OPT pass (performing simple optimizations).

19.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

19.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

19.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~48 debug messages>

19.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

19.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

19.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.19.9. Rerunning OPT passes. (Maybe there is more to do..)

19.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~48 debug messages>

19.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

19.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.19.16. Finished OPT passes. (There is nothing left to do.)

19.20. Executing FSM pass (extract and optimize FSM).

19.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.data_mem_inst.state as FSM state register:
    Register has an initialization value.
Not marking top.inst_mem.state as FSM state register:
    Register has an initialization value.

19.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

19.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

19.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

19.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

19.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

19.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

19.21. Executing OPT pass (performing simple optimizations).

19.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

19.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.21.5. Finished fast OPT passes.

19.22. Executing MEMORY pass.

19.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

19.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:0$249' in module `\top': merged $dff to cell.
Checking cell `$techmap\processor.ControlAndStatus_registers.$memwr$\csr_file$verilog/CSR.v:0$282' in module `\top': merged $dff to cell.
Checking cell `$techmap\processor.register_files.$memwr$\regfile$verilog/register_file.v:0$274' in module `\top': merged $dff to cell.
Checking cell `$techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:262$243' in module `\top': merged data $dff with rd enable to cell.
Checking cell `$techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:105$162' in module `\top': merged data $dff with rd enable to cell.
Checking cell `$techmap\processor.ControlAndStatus_registers.$memrd$\csr_file$verilog/CSR.v:61$281' in module `\top': merged data $dff to cell.
Checking cell `$techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:104$261' in module `\top': merged data $dff to cell.
Checking cell `$techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:105$262' in module `\top': merged data $dff to cell.

19.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 14 unused cells and 19 unused wires.
<suppressed ~15 debug messages>

19.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

19.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\data_mem_inst.data_block' in module `\top':
  $techmap\data_mem_inst.$meminit$\data_block$verilog/data_mem.v:0$248 ($meminit)
  $techmap\data_mem_inst.$memwr$\data_block$verilog/data_mem.v:0$249 ($memwr)
  $techmap\data_mem_inst.$memrd$\data_block$verilog/data_mem.v:262$243 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\inst_mem.instruction_memory' in module `\top':
  $techmap\inst_mem.$meminit$\instruction_memory$verilog/instruction_mem.v:0$164 ($meminit)
  $techmap\inst_mem.$memrd$\instruction_memory$verilog/instruction_mem.v:105$162 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\processor.ControlAndStatus_registers.csr_file' in module `\top':
  $techmap\processor.ControlAndStatus_registers.$memwr$\csr_file$verilog/CSR.v:0$282 ($memwr)
  $techmap\processor.ControlAndStatus_registers.$memrd$\csr_file$verilog/CSR.v:61$281 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\processor.register_files.regfile' in module `\top':
  $techmap\processor.register_files.$meminit$\regfile$verilog/register_file.v:0$273 ($meminit)
  $techmap\processor.register_files.$memwr$\regfile$verilog/register_file.v:0$274 ($memwr)
  $techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:105$262 ($memrd)
  $techmap\processor.register_files.$memrd$\regfile$verilog/register_file.v:104$261 ($memrd)

19.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing top.data_mem_inst.data_block:
  Properties: ports=2 bits=32768 rports=1 wports=1 dbits=32 abits=10 words=1024
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=50, cells=16, acells=1
    Efficiency for rule 4.2: efficiency=100, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=100, cells=8, acells=2
    Efficiency for rule 1.1: efficiency=100, cells=8, acells=4
    Selected rule 4.2 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: data_mem_inst.data_block.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: data_mem_inst.data_block.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: data_mem_inst.data_block.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: data_mem_inst.data_block.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: data_mem_inst.data_block.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: data_mem_inst.data_block.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: data_mem_inst.data_block.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: data_mem_inst.data_block.7.0.0
Processing top.inst_mem.instruction_memory:
  Properties: ports=1 bits=32768 rports=1 wports=0 dbits=32 abits=10 words=1024
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'min wports 1' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_romstyle="ebr" ...' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'min wports 1' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'min wports 1' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min wports 1' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_romstyle="ebr" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_romstyle="ebr" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_romstyle="ebr" ...' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=50, cells=16, acells=1
    Efficiency for rule 4.2: efficiency=100, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=100, cells=8, acells=2
    Efficiency for rule 1.1: efficiency=100, cells=8, acells=4
    Selected rule 4.2 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: inst_mem.instruction_memory.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: inst_mem.instruction_memory.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: inst_mem.instruction_memory.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: inst_mem.instruction_memory.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: inst_mem.instruction_memory.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: inst_mem.instruction_memory.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: inst_mem.instruction_memory.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: inst_mem.instruction_memory.7.0.0
Processing top.processor.ControlAndStatus_registers.csr_file:
  Properties: ports=2 bits=32768 rports=1 wports=1 dbits=32 abits=10 words=1024
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=0 efficiency=100
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 3):
      Write port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=2048 efficiency=50
      Storing for later selection.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=0 dwaste=0 bwaste=0 waste=0 efficiency=100
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=1024 dwaste=0 bwaste=2048 waste=2048 efficiency=50
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 4 rules:
    Efficiency for rule 4.3: efficiency=50, cells=16, acells=1
    Efficiency for rule 4.2: efficiency=100, cells=8, acells=1
    Efficiency for rule 4.1: efficiency=100, cells=8, acells=2
    Efficiency for rule 1.1: efficiency=100, cells=8, acells=4
    Selected rule 4.2 with efficiency 100.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: processor.ControlAndStatus_registers.csr_file.0.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <1 0 0>: processor.ControlAndStatus_registers.csr_file.1.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <2 0 0>: processor.ControlAndStatus_registers.csr_file.2.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <3 0 0>: processor.ControlAndStatus_registers.csr_file.3.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <4 0 0>: processor.ControlAndStatus_registers.csr_file.4.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <5 0 0>: processor.ControlAndStatus_registers.csr_file.5.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <6 0 0>: processor.ControlAndStatus_registers.csr_file.6.0.0
      Creating $__ICE40_RAM4K_M123 cell at grid position <7 0 0>: processor.ControlAndStatus_registers.csr_file.7.0.0
Processing top.processor.register_files.regfile:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \processor.ControlAndStatus_registers.clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \processor.ControlAndStatus_registers.clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \processor.ControlAndStatus_registers.clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 2 rules:
    Efficiency for rule 4.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \processor.ControlAndStatus_registers.clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \processor.ControlAndStatus_registers.clk.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: processor.register_files.regfile.0.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: processor.register_files.regfile.0.0.1
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: processor.register_files.regfile.1.0.0
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: processor.register_files.regfile.1.0.1

19.25. Executing TECHMAP pass (map to technology primitives).

19.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

19.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=10\CFG_DBITS=4\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$ee338b437991470233af7a84b55b37defcaac296\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$557d6522e2c271c94bfebaa68fcf078415db4038\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$9dfe5a095e1f6aa58ae0b06822f41e4b720ec03e\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$96730f2979e4ec5e6048c90567de94ce5992570a\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$393e15b5e00bc13490e1ef7bc58db2210e872efb\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$78ab3775a842905098e496b37726b9617f479b7d\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$b54d3e06370a7d4b26eb3bf055db4988850b90c6\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$7c01128c47821c00041f4149da79e5374eeb90af\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$1d8f31ba647830b3cf268a83409ed2fbc24aa924\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$24ed1debf43dc594cff4a75c802257a38a5e5396\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$4b56818c9d5ecd7ebab32df9add806145a026434\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$da3c7878040e8ca4ef0dce62b8cea858bb503ae9\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$f40b41ed01e4edcf07af4d0a3bcd82a7638e29a5\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$15af82c7f260a5756bb7a79bc53232f1a2644db4\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$112398c3e04675c79ee6ed68c896edee02a870dd\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$55976fa431d00d916e4cc349ebb8c767a6abec12\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$0ebeabc03b314c1f58b345584c0f3d48bde60c83\$__ICE40_RAM4K_M123 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$e960588dacff89b8f882c5a0277b8c8d527c9965\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$960485841f660243af450c42d6b4560e3d9823f2\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$071f02249dad81b315ad801809edf76aa20f7e76\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$b78317c9378c434c22d394977fd350232e812391\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$317948a649b2c78f09b6e3209f7f197c6f67f1b6\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6f4dc0cd3afe34139e925dfc011d512bf5e38ff3\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$6b1aed27008580900f145b31eb5ead97cb45f703\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$c627afcf99922150bea99dfd202f51f330026882\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$04590b1c0ad951b467387fa50f06eed86cffb2a0\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$76360ec68c0cc7ca1ee57e656bb1adeca7c05dce\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$d5070268d5bb8fc23c4cc63974544bf8804d7014\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$1a0a345dd159c773841ceef5450b155c61871408\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$fea0615c67e0fd592c8e25f0e136394aabe19257\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$41d8f04fce294c7d32f526dfd84116bde7bb727c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$241354fdd77cd65835a0c4f210de0458ac591e52\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$ab391c336cfc86e936de174a70640c7939931c4f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$ff05fa73758300bfdbb5c3d8b621bedb197ed782\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
Using template $paramod$2d6113b3d225f43c78ca19de2be7bd4451250b9c\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~1258 debug messages>

19.26. Executing ICE40_BRAMINIT pass.

19.27. Executing OPT pass (performing simple optimizations).

19.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~222 debug messages>

19.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

19.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

19.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 682 unused wires.
<suppressed ~2 debug messages>

19.27.5. Finished fast OPT passes.

19.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

19.29. Executing OPT pass (performing simple optimizations).

19.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

19.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [15:8] }, B={ \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15:8] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [15], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] \data_mem_inst.word_buf [15:8] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [7:0] }, B={ \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7] \data_mem_inst.word_buf [7:0] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [7], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] \data_mem_inst.word_buf [7:0] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [31:24] }, B={ \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31:24] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [31], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] \data_mem_inst.word_buf [31:24] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221:
      Old ports: A={ 24'000000000000000000000000 \data_mem_inst.word_buf [23:16] }, B={ \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23] \data_mem_inst.word_buf [23:16] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [23], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [31:9] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [7:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] \data_mem_inst.word_buf [23:16] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224:
      Old ports: A={ 16'0000000000000000 \data_mem_inst.word_buf [31:16] }, B={ \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31] \data_mem_inst.word_buf [31:16] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [31], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [31:17] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [15:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] \data_mem_inst.word_buf [31:16] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226:
      Old ports: A={ 16'0000000000000000 \data_mem_inst.word_buf [15:0] }, B={ \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15] \data_mem_inst.word_buf [15:0] }, Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y
      New ports: A=1'0, B=\data_mem_inst.word_buf [15], Y=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16]
      New connections: { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [31:17] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [15:0] } = { $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] \data_mem_inst.word_buf [15:0] }
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$769:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:460:run$944 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:460:run$944 [2] $auto$wreduce.cc:460:run$944 [0] }
      New connections: $auto$wreduce.cc:460:run$944 [1] = $auto$wreduce.cc:460:run$944 [0]
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$785:
      Old ports: A=3'010, B=3'110, Y=$auto$wreduce.cc:460:run$945 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$945 [2]
      New connections: $auto$wreduce.cc:460:run$945 [1:0] = 2'10
    Consolidated identical input bits for $pmux cell $techmap\processor.alu_control.$procmux$794:
      Old ports: A={ 4'0000 $auto$wreduce.cc:460:run$945 [2:0] }, B={ 25'0000101000011100010000000 $auto$wreduce.cc:460:run$944 [2:0] 14'00000010000000 }, Y=$techmap\processor.alu_control.$7\ALUCtl[6:0]
      New ports: A={ 1'0 $auto$wreduce.cc:460:run$945 [2:0] }, B={ 13'0101011110000 $auto$wreduce.cc:460:run$944 [2:0] 8'00010000 }, Y=$techmap\processor.alu_control.$7\ALUCtl[6:0] [3:0]
      New connections: $techmap\processor.alu_control.$7\ALUCtl[6:0] [6:4] = 3'000
    Consolidated identical input bits for $pmux cell $techmap\processor.alu_control.$procmux$818:
      Old ports: A=7'0000010, B={ 39'000011100010000000001000000000001010000 $auto$wreduce.cc:460:run$944 [2:0] }, Y=$techmap\processor.alu_control.$5\ALUCtl[6:0]
      New ports: A=4'0010, B={ 21'011110000001000001010 $auto$wreduce.cc:460:run$944 [2:0] }, Y=$techmap\processor.alu_control.$5\ALUCtl[6:0] [3:0]
      New connections: $techmap\processor.alu_control.$5\ALUCtl[6:0] [6:4] = 3'000
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$834:
      Old ports: A=4'1111, B=4'0010, Y=$auto$wreduce.cc:460:run$943 [3:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$943 [0]
      New connections: $auto$wreduce.cc:460:run$943 [3:1] = { $auto$wreduce.cc:460:run$943 [0] $auto$wreduce.cc:460:run$943 [0] 1'1 }
    Consolidated identical input bits for $mux cell $techmap\processor.alu_control.$procmux$846:
      Old ports: A=4'1111, B=4'0010, Y=$auto$wreduce.cc:460:run$942 [3:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$942 [0]
      New connections: $auto$wreduce.cc:460:run$942 [3:1] = { $auto$wreduce.cc:460:run$942 [0] $auto$wreduce.cc:460:run$942 [0] 1'1 }
    Consolidated identical input bits for $pmux cell $techmap\processor.alu_control.$procmux$861:
      Old ports: A=7'0001111, B=42'001011001001100110110100011010101101100110, Y=$techmap\processor.alu_control.$2\ALUCtl[6:0]
      New ports: A=4'0001, B=24'001001000110100010101100, Y={ $techmap\processor.alu_control.$2\ALUCtl[6:0] [6:4] $techmap\processor.alu_control.$2\ALUCtl[6:0] [0] }
      New connections: $techmap\processor.alu_control.$2\ALUCtl[6:0] [3:1] = { $techmap\processor.alu_control.$2\ALUCtl[6:0] [0] 2'11 }
    Consolidated identical input bits for $mux cell $techmap\processor.fence_mux.$ternary$verilog/mux2to1.v:50$7:
      Old ports: A={ \processor.fence_mux.input0 [31:2] \processor.PC.outAddr [1:0] }, B=\processor.PC.outAddr, Y=\processor.branch_predictor_mux.input0
      New ports: A=\processor.fence_mux.input0 [31:2], B=\processor.PC.outAddr [31:2], Y=\processor.branch_predictor_mux.input0 [31:2]
      New connections: \processor.branch_predictor_mux.input0 [1:0] = \processor.PC.outAddr [1:0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$217:
      Old ports: A=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y, B=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y, Y=\data_mem_inst.out1
      New ports: A={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$216_Y [8] \data_mem_inst.word_buf [7:0] }, B={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:205$214_Y [8] \data_mem_inst.word_buf [15:8] }, Y=\data_mem_inst.out1 [8:0]
      New connections: \data_mem_inst.out1 [31:9] = { \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] \data_mem_inst.out1 [8] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$222:
      Old ports: A=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y, B=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y, Y=\data_mem_inst.out2
      New ports: A={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$221_Y [8] \data_mem_inst.word_buf [23:16] }, B={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:206$219_Y [8] \data_mem_inst.word_buf [31:24] }, Y=\data_mem_inst.out2 [8:0]
      New connections: \data_mem_inst.out2 [31:9] = { \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] \data_mem_inst.out2 [8] }
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$227:
      Old ports: A=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y, B=$techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y, Y=\data_mem_inst.out3
      New ports: A={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$226_Y [16] \data_mem_inst.word_buf [15:0] }, B={ $techmap\data_mem_inst.$ternary$verilog/data_mem.v:207$224_Y [16] \data_mem_inst.word_buf [31:16] }, Y=\data_mem_inst.out3 [16:0]
      New connections: \data_mem_inst.out3 [31:17] = { \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] \data_mem_inst.out3 [16] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\data_mem_inst.$ternary$verilog/data_mem.v:210$229:
      Old ports: A=\data_mem_inst.out1, B=\data_mem_inst.out2, Y=\data_mem_inst.out5
      New ports: A=\data_mem_inst.out1 [8:0], B=\data_mem_inst.out2 [8:0], Y=\data_mem_inst.out5 [8:0]
      New connections: \data_mem_inst.out5 [31:9] = { \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] \data_mem_inst.out5 [8] }
  Optimizing cells in module \top.
Performed a total of 18 changes.

19.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

19.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

19.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

19.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.29.9. Rerunning OPT passes. (Maybe there is more to do..)

19.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

19.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

19.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

19.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.29.16. Finished OPT passes. (There is nothing left to do.)

19.30. Executing ICE40_WRAPCARRY pass (wrap carries).

19.31. Executing TECHMAP pass (map to technology primitives).

19.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

19.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_pmux\WIDTH=31\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=7 for cells of type $pmux.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$943af4e63d02cf420cf82d17400bd04ea07088b0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=11 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~1907 debug messages>

19.32. Executing OPT pass (performing simple optimizations).

19.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1218 debug messages>

19.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~2010 debug messages>
Removed a total of 670 cells.

19.32.3. Executing OPT_RMDFF pass (remove dff with constant values).

19.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 317 unused cells and 920 unused wires.
<suppressed ~318 debug messages>

19.32.5. Finished fast OPT passes.

19.33. Executing ICE40_OPT pass (performing simple optimizations).

19.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1005.slice[0].carry: CO=\processor.PC.outAddr [2]

19.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~85 debug messages>

19.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.33.4. Executing OPT_RMDFF pass (remove dff with constant values).

19.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.33.6. Rerunning OPT passes. (Removed registers in this run.)

19.33.7. Running ICE40 specific optimizations.

19.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.33.10. Executing OPT_RMDFF pass (remove dff with constant values).

19.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.33.12. Finished OPT passes. (There is nothing left to do.)

19.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1211 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [0] -> \inst_mem.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1212 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [1] -> \inst_mem.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1213 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [2] -> \inst_mem.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1214 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [3] -> \inst_mem.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1215 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [4] -> \inst_mem.state [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1216 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [5] -> \inst_mem.state [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1217 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [6] -> \inst_mem.state [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1218 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [7] -> \inst_mem.state [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1219 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [8] -> \inst_mem.state [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1220 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [9] -> \inst_mem.state [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1221 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [10] -> \inst_mem.state [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1222 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [11] -> \inst_mem.state [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1223 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [12] -> \inst_mem.state [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1224 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [13] -> \inst_mem.state [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1225 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [14] -> \inst_mem.state [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1226 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [15] -> \inst_mem.state [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1227 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [16] -> \inst_mem.state [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1228 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [17] -> \inst_mem.state [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1229 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [18] -> \inst_mem.state [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1230 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [19] -> \inst_mem.state [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1231 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [20] -> \inst_mem.state [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1232 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [21] -> \inst_mem.state [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1233 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [22] -> \inst_mem.state [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1234 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [23] -> \inst_mem.state [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1235 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [24] -> \inst_mem.state [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1236 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [25] -> \inst_mem.state [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1237 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [26] -> \inst_mem.state [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1238 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [27] -> \inst_mem.state [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1239 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [28] -> \inst_mem.state [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1240 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [29] -> \inst_mem.state [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1241 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [30] -> \inst_mem.state [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1242 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$704.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [31] -> \inst_mem.state [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1243 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [0] -> \inst_mem.previous_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1244 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [1] -> \inst_mem.previous_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1245 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [2] -> \inst_mem.previous_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1246 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [3] -> \inst_mem.previous_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1247 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [4] -> \inst_mem.previous_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1248 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [5] -> \inst_mem.previous_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1249 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [6] -> \inst_mem.previous_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1250 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [7] -> \inst_mem.previous_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1251 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [8] -> \inst_mem.previous_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1252 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [9] -> \inst_mem.previous_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1253 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [10] -> \inst_mem.previous_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1254 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [11] -> \inst_mem.previous_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1255 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [12] -> \inst_mem.previous_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1256 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [13] -> \inst_mem.previous_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1257 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [14] -> \inst_mem.previous_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1258 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [15] -> \inst_mem.previous_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1259 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [16] -> \inst_mem.previous_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1260 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [17] -> \inst_mem.previous_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1261 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [18] -> \inst_mem.previous_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1262 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [19] -> \inst_mem.previous_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1263 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [20] -> \inst_mem.previous_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1264 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [21] -> \inst_mem.previous_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1265 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [22] -> \inst_mem.previous_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1266 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [23] -> \inst_mem.previous_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1267 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [24] -> \inst_mem.previous_addr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1268 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [25] -> \inst_mem.previous_addr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1269 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [26] -> \inst_mem.previous_addr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1270 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [27] -> \inst_mem.previous_addr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1271 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [28] -> \inst_mem.previous_addr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1272 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [29] -> \inst_mem.previous_addr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1273 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [30] -> \inst_mem.previous_addr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1274 to $_DFFE_PP_ for $techmap\inst_mem.$0\previous_addr[31:0] [31] -> \inst_mem.previous_addr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1275 to $_DFFE_PP_ for $techmap$techmap\inst_mem.$procmux$718.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1278_Y -> \inst_mem.clk_stall.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1752 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [0] -> \data_mem_inst.led_reg [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1753 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [1] -> \data_mem_inst.led_reg [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1754 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [2] -> \data_mem_inst.led_reg [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1755 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [3] -> \data_mem_inst.led_reg [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1756 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [4] -> \data_mem_inst.led_reg [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1757 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [5] -> \data_mem_inst.led_reg [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1758 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [6] -> \data_mem_inst.led_reg [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1759 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\led_reg[31:0] [7] -> \data_mem_inst.led_reg [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1785 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\sign_mask_buf[3:0] [1] -> \data_mem_inst.sign_mask_buf [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1786 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\sign_mask_buf[3:0] [2] -> \data_mem_inst.sign_mask_buf [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1787 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\sign_mask_buf[3:0] [3] -> \data_mem_inst.sign_mask_buf [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1788 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [0] -> \data_mem_inst.addr_buf [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1789 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [1] -> \data_mem_inst.addr_buf [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1790 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [2] -> \data_mem_inst.addr_buf [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1791 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [3] -> \data_mem_inst.addr_buf [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1792 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [4] -> \data_mem_inst.addr_buf [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1793 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [5] -> \data_mem_inst.addr_buf [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1794 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [6] -> \data_mem_inst.addr_buf [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1795 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [7] -> \data_mem_inst.addr_buf [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1796 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [8] -> \data_mem_inst.addr_buf [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1797 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [9] -> \data_mem_inst.addr_buf [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1798 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [10] -> \data_mem_inst.addr_buf [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1799 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\addr_buf[31:0] [11] -> \data_mem_inst.addr_buf [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1820 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [0] -> \data_mem_inst.write_data_buffer [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1821 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [1] -> \data_mem_inst.write_data_buffer [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1822 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [2] -> \data_mem_inst.write_data_buffer [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1823 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [3] -> \data_mem_inst.write_data_buffer [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1824 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [4] -> \data_mem_inst.write_data_buffer [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1825 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [5] -> \data_mem_inst.write_data_buffer [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1826 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [6] -> \data_mem_inst.write_data_buffer [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1827 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [7] -> \data_mem_inst.write_data_buffer [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1828 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [8] -> \data_mem_inst.write_data_buffer [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1829 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [9] -> \data_mem_inst.write_data_buffer [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1830 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [10] -> \data_mem_inst.write_data_buffer [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1831 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [11] -> \data_mem_inst.write_data_buffer [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1832 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [12] -> \data_mem_inst.write_data_buffer [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1833 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [13] -> \data_mem_inst.write_data_buffer [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1834 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [14] -> \data_mem_inst.write_data_buffer [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1835 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [15] -> \data_mem_inst.write_data_buffer [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1836 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [16] -> \data_mem_inst.write_data_buffer [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1837 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [17] -> \data_mem_inst.write_data_buffer [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1838 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [18] -> \data_mem_inst.write_data_buffer [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1839 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [19] -> \data_mem_inst.write_data_buffer [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1840 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [20] -> \data_mem_inst.write_data_buffer [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1841 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [21] -> \data_mem_inst.write_data_buffer [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1842 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [22] -> \data_mem_inst.write_data_buffer [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1843 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [23] -> \data_mem_inst.write_data_buffer [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1844 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [24] -> \data_mem_inst.write_data_buffer [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1845 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [25] -> \data_mem_inst.write_data_buffer [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1846 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [26] -> \data_mem_inst.write_data_buffer [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1847 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [27] -> \data_mem_inst.write_data_buffer [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1848 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [28] -> \data_mem_inst.write_data_buffer [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1849 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [29] -> \data_mem_inst.write_data_buffer [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1850 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [30] -> \data_mem_inst.write_data_buffer [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1851 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\write_data_buffer[31:0] [31] -> \data_mem_inst.write_data_buffer [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1852 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\memwrite_buf[0:0] -> \data_mem_inst.memwrite_buf.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1853 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\memread_buf[0:0] -> \data_mem_inst.memread_buf.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1854 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [0] -> \data_mem_inst.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1855 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [1] -> \data_mem_inst.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1856 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [2] -> \data_mem_inst.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1857 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [3] -> \data_mem_inst.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1858 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [4] -> \data_mem_inst.state [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1859 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [5] -> \data_mem_inst.state [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1860 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [6] -> \data_mem_inst.state [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1861 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [7] -> \data_mem_inst.state [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1862 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [8] -> \data_mem_inst.state [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1863 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [9] -> \data_mem_inst.state [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1864 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [10] -> \data_mem_inst.state [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1865 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [11] -> \data_mem_inst.state [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1866 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [12] -> \data_mem_inst.state [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1867 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [13] -> \data_mem_inst.state [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1868 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [14] -> \data_mem_inst.state [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1869 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [15] -> \data_mem_inst.state [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1870 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [16] -> \data_mem_inst.state [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1871 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [17] -> \data_mem_inst.state [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1872 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [18] -> \data_mem_inst.state [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1873 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [19] -> \data_mem_inst.state [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1874 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [20] -> \data_mem_inst.state [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1875 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [21] -> \data_mem_inst.state [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1876 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [22] -> \data_mem_inst.state [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1877 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [23] -> \data_mem_inst.state [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1878 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [24] -> \data_mem_inst.state [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1879 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [25] -> \data_mem_inst.state [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1880 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [26] -> \data_mem_inst.state [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1881 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [27] -> \data_mem_inst.state [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1882 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [28] -> \data_mem_inst.state [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1883 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [29] -> \data_mem_inst.state [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1884 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [30] -> \data_mem_inst.state [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1885 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$681.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1490_Y [31] -> \data_mem_inst.state [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1886 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [0] -> \data_mem_inst.read_data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1887 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [1] -> \data_mem_inst.read_data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1888 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [2] -> \data_mem_inst.read_data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1889 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [3] -> \data_mem_inst.read_data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1890 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [4] -> \data_mem_inst.read_data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1891 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [5] -> \data_mem_inst.read_data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1892 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [6] -> \data_mem_inst.read_data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1893 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [7] -> \data_mem_inst.read_data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1894 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [8] -> \data_mem_inst.read_data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1895 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [9] -> \data_mem_inst.read_data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1896 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [10] -> \data_mem_inst.read_data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1897 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [11] -> \data_mem_inst.read_data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1898 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [12] -> \data_mem_inst.read_data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1899 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [13] -> \data_mem_inst.read_data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1900 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [14] -> \data_mem_inst.read_data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1901 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [15] -> \data_mem_inst.read_data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1902 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [16] -> \data_mem_inst.read_data [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1903 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [17] -> \data_mem_inst.read_data [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1904 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [18] -> \data_mem_inst.read_data [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1905 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [19] -> \data_mem_inst.read_data [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1906 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [20] -> \data_mem_inst.read_data [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1907 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [21] -> \data_mem_inst.read_data [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1908 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [22] -> \data_mem_inst.read_data [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1909 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [23] -> \data_mem_inst.read_data [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1910 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [24] -> \data_mem_inst.read_data [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1911 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [25] -> \data_mem_inst.read_data [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1912 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [26] -> \data_mem_inst.read_data [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1913 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [27] -> \data_mem_inst.read_data [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1914 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [28] -> \data_mem_inst.read_data [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1915 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [29] -> \data_mem_inst.read_data [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1916 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [30] -> \data_mem_inst.read_data [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1917 to $_DFFE_PP_ for $techmap\data_mem_inst.$0\read_data[31:0] [31] -> \data_mem_inst.read_data [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1918 to $_DFFE_PP_ for $techmap$techmap\data_mem_inst.$procmux$696.$ternary$/usr/local/bin/../share/yosys/techmap.v:480$1278_Y -> \data_mem_inst.clk_stall.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3134 to $_DFFE_PP_ for \processor.PC.inAddr [0] -> \processor.PC.outAddr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3135 to $_DFFE_PP_ for \processor.PC.inAddr [1] -> \processor.PC.outAddr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3136 to $_DFFE_PP_ for \processor.PC.inAddr [2] -> \processor.PC.outAddr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3137 to $_DFFE_PP_ for \processor.PC.inAddr [3] -> \processor.PC.outAddr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3138 to $_DFFE_PP_ for \processor.PC.inAddr [4] -> \processor.PC.outAddr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3139 to $_DFFE_PP_ for \processor.PC.inAddr [5] -> \processor.PC.outAddr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3140 to $_DFFE_PP_ for \processor.PC.inAddr [6] -> \processor.PC.outAddr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3141 to $_DFFE_PP_ for \processor.PC.inAddr [7] -> \processor.PC.outAddr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3142 to $_DFFE_PP_ for \processor.PC.inAddr [8] -> \processor.PC.outAddr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3143 to $_DFFE_PP_ for \processor.PC.inAddr [9] -> \processor.PC.outAddr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3144 to $_DFFE_PP_ for \processor.PC.inAddr [10] -> \processor.PC.outAddr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3145 to $_DFFE_PP_ for \processor.PC.inAddr [11] -> \processor.PC.outAddr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3146 to $_DFFE_PP_ for \processor.PC.inAddr [12] -> \processor.PC.outAddr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3147 to $_DFFE_PP_ for \processor.PC.inAddr [13] -> \processor.PC.outAddr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3148 to $_DFFE_PP_ for \processor.PC.inAddr [14] -> \processor.PC.outAddr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3149 to $_DFFE_PP_ for \processor.PC.inAddr [15] -> \processor.PC.outAddr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3150 to $_DFFE_PP_ for \processor.PC.inAddr [16] -> \processor.PC.outAddr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3151 to $_DFFE_PP_ for \processor.PC.inAddr [17] -> \processor.PC.outAddr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3152 to $_DFFE_PP_ for \processor.PC.inAddr [18] -> \processor.PC.outAddr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3153 to $_DFFE_PP_ for \processor.PC.inAddr [19] -> \processor.PC.outAddr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3154 to $_DFFE_PP_ for \processor.PC.inAddr [20] -> \processor.PC.outAddr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3155 to $_DFFE_PP_ for \processor.PC.inAddr [21] -> \processor.PC.outAddr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3156 to $_DFFE_PP_ for \processor.PC.inAddr [22] -> \processor.PC.outAddr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3157 to $_DFFE_PP_ for \processor.PC.inAddr [23] -> \processor.PC.outAddr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3158 to $_DFFE_PP_ for \processor.PC.inAddr [24] -> \processor.PC.outAddr [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3159 to $_DFFE_PP_ for \processor.PC.inAddr [25] -> \processor.PC.outAddr [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3160 to $_DFFE_PP_ for \processor.PC.inAddr [26] -> \processor.PC.outAddr [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3161 to $_DFFE_PP_ for \processor.PC.inAddr [27] -> \processor.PC.outAddr [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3162 to $_DFFE_PP_ for \processor.PC.inAddr [28] -> \processor.PC.outAddr [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3163 to $_DFFE_PP_ for \processor.PC.inAddr [29] -> \processor.PC.outAddr [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3164 to $_DFFE_PP_ for \processor.PC.inAddr [30] -> \processor.PC.outAddr [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3165 to $_DFFE_PP_ for \processor.PC.inAddr [31] -> \processor.PC.outAddr [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3370 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\s[1:0] [0] -> \processor.branch_predictor_FSM.s [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3371 to $_DFFE_PP_ for $techmap\processor.branch_predictor_FSM.$0\s[1:0] [1] -> \processor.branch_predictor_FSM.s [1].

19.35. Executing TECHMAP pass (map to technology primitives).

19.35.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

19.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~747 debug messages>

19.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~632 debug messages>

19.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$1005.slice[0].carry ($lut).

19.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6745 (SB_DFF): \processor.ex_mem_reg.data_out [137] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1878 (SB_DFFE): \data_mem_inst.state [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1221 (SB_DFFE): \inst_mem.state [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1226 (SB_DFFE): \inst_mem.state [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1214 (SB_DFFE): \inst_mem.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1215 (SB_DFFE): \inst_mem.state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1216 (SB_DFFE): \inst_mem.state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1217 (SB_DFFE): \inst_mem.state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1218 (SB_DFFE): \inst_mem.state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1225 (SB_DFFE): \inst_mem.state [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1227 (SB_DFFE): \inst_mem.state [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1239 (SB_DFFE): \inst_mem.state [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1229 (SB_DFFE): \inst_mem.state [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1241 (SB_DFFE): \inst_mem.state [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1213 (SB_DFFE): \inst_mem.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1222 (SB_DFFE): \inst_mem.state [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1224 (SB_DFFE): \inst_mem.state [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1242 (SB_DFFE): \inst_mem.state [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1240 (SB_DFFE): \inst_mem.state [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1238 (SB_DFFE): \inst_mem.state [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1236 (SB_DFFE): \inst_mem.state [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1230 (SB_DFFE): \inst_mem.state [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1234 (SB_DFFE): \inst_mem.state [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1237 (SB_DFFE): \inst_mem.state [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1233 (SB_DFFE): \inst_mem.state [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1223 (SB_DFFE): \inst_mem.state [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1232 (SB_DFFE): \inst_mem.state [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1219 (SB_DFFE): \inst_mem.state [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1235 (SB_DFFE): \inst_mem.state [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1228 (SB_DFFE): \inst_mem.state [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1231 (SB_DFFE): \inst_mem.state [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1212 (SB_DFFE): \inst_mem.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1211 (SB_DFFE): \inst_mem.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1220 (SB_DFFE): \inst_mem.state [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1880 (SB_DFFE): \data_mem_inst.state [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1881 (SB_DFFE): \data_mem_inst.state [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1882 (SB_DFFE): \data_mem_inst.state [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1883 (SB_DFFE): \data_mem_inst.state [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1884 (SB_DFFE): \data_mem_inst.state [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1885 (SB_DFFE): \data_mem_inst.state [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1862 (SB_DFFE): \data_mem_inst.state [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1863 (SB_DFFE): \data_mem_inst.state [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1864 (SB_DFFE): \data_mem_inst.state [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1865 (SB_DFFE): \data_mem_inst.state [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1866 (SB_DFFE): \data_mem_inst.state [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1867 (SB_DFFE): \data_mem_inst.state [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1868 (SB_DFFE): \data_mem_inst.state [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1869 (SB_DFFE): \data_mem_inst.state [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1870 (SB_DFFE): \data_mem_inst.state [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1871 (SB_DFFE): \data_mem_inst.state [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1872 (SB_DFFE): \data_mem_inst.state [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1873 (SB_DFFE): \data_mem_inst.state [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1874 (SB_DFFE): \data_mem_inst.state [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1875 (SB_DFFE): \data_mem_inst.state [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1876 (SB_DFFE): \data_mem_inst.state [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1877 (SB_DFFE): \data_mem_inst.state [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1879 (SB_DFFE): \data_mem_inst.state [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1854 (SB_DFFE): \data_mem_inst.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1855 (SB_DFFE): \data_mem_inst.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1856 (SB_DFFE): \data_mem_inst.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1857 (SB_DFFE): \data_mem_inst.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1858 (SB_DFFE): \data_mem_inst.state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1859 (SB_DFFE): \data_mem_inst.state [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1860 (SB_DFFE): \data_mem_inst.state [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1861 (SB_DFFE): \data_mem_inst.state [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6609 (SB_DFF): \processor.ex_mem_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2846 (SB_DFF): \processor.mem_wb_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6611 (SB_DFF): \processor.ex_mem_reg.data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6682 (SB_DFF): \processor.ex_mem_reg.data_out [74] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6683 (SB_DFF): \processor.ex_mem_reg.data_out [75] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6684 (SB_DFF): \processor.ex_mem_reg.data_out [76] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6685 (SB_DFF): \processor.ex_mem_reg.data_out [77] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6686 (SB_DFF): \processor.ex_mem_reg.data_out [78] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6687 (SB_DFF): \processor.ex_mem_reg.data_out [79] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6688 (SB_DFF): \processor.ex_mem_reg.data_out [80] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6689 (SB_DFF): \processor.ex_mem_reg.data_out [81] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6690 (SB_DFF): \processor.ex_mem_reg.data_out [82] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6691 (SB_DFF): \processor.ex_mem_reg.data_out [83] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6692 (SB_DFF): \processor.ex_mem_reg.data_out [84] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6693 (SB_DFF): \processor.ex_mem_reg.data_out [85] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6694 (SB_DFF): \processor.ex_mem_reg.data_out [86] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6695 (SB_DFF): \processor.ex_mem_reg.data_out [87] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6696 (SB_DFF): \processor.ex_mem_reg.data_out [88] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6697 (SB_DFF): \processor.ex_mem_reg.data_out [89] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6698 (SB_DFF): \processor.ex_mem_reg.data_out [90] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6699 (SB_DFF): \processor.ex_mem_reg.data_out [91] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6700 (SB_DFF): \processor.ex_mem_reg.data_out [92] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6701 (SB_DFF): \processor.ex_mem_reg.data_out [93] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6702 (SB_DFF): \processor.ex_mem_reg.data_out [94] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6703 (SB_DFF): \processor.ex_mem_reg.data_out [95] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6704 (SB_DFF): \processor.ex_mem_reg.data_out [96] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6705 (SB_DFF): \processor.ex_mem_reg.data_out [97] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6706 (SB_DFF): \processor.ex_mem_reg.data_out [98] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6707 (SB_DFF): \processor.ex_mem_reg.data_out [99] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6708 (SB_DFF): \processor.ex_mem_reg.data_out [100] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6709 (SB_DFF): \processor.ex_mem_reg.data_out [101] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6710 (SB_DFF): \processor.ex_mem_reg.data_out [102] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6711 (SB_DFF): \processor.ex_mem_reg.data_out [103] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6712 (SB_DFF): \processor.ex_mem_reg.data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6713 (SB_DFF): \processor.ex_mem_reg.data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2880 (SB_DFF): \processor.mem_wb_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2881 (SB_DFF): \processor.mem_wb_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2882 (SB_DFF): \processor.mem_wb_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2883 (SB_DFF): \processor.mem_wb_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2884 (SB_DFF): \processor.mem_wb_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2885 (SB_DFF): \processor.mem_wb_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2886 (SB_DFF): \processor.mem_wb_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2887 (SB_DFF): \processor.mem_wb_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2888 (SB_DFF): \processor.mem_wb_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2889 (SB_DFF): \processor.mem_wb_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2890 (SB_DFF): \processor.mem_wb_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2891 (SB_DFF): \processor.mem_wb_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2892 (SB_DFF): \processor.mem_wb_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2893 (SB_DFF): \processor.mem_wb_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2894 (SB_DFF): \processor.mem_wb_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2895 (SB_DFF): \processor.mem_wb_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2896 (SB_DFF): \processor.mem_wb_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2897 (SB_DFF): \processor.mem_wb_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2898 (SB_DFF): \processor.mem_wb_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2899 (SB_DFF): \processor.mem_wb_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2900 (SB_DFF): \processor.mem_wb_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2901 (SB_DFF): \processor.mem_wb_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2902 (SB_DFF): \processor.mem_wb_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2903 (SB_DFF): \processor.mem_wb_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2904 (SB_DFF): \processor.mem_wb_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2905 (SB_DFF): \processor.mem_wb_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2906 (SB_DFF): \processor.mem_wb_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2907 (SB_DFF): \processor.mem_wb_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2908 (SB_DFF): \processor.mem_wb_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2909 (SB_DFF): \processor.mem_wb_reg.data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2910 (SB_DFF): \processor.mem_wb_reg.data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2911 (SB_DFF): \processor.mem_wb_reg.data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2912 (SB_DFF): \processor.mem_wb_reg.data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2913 (SB_DFF): \processor.mem_wb_reg.data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2914 (SB_DFF): \processor.mem_wb_reg.data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2915 (SB_DFF): \processor.mem_wb_reg.data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2916 (SB_DFF): \processor.mem_wb_reg.data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2917 (SB_DFF): \processor.mem_wb_reg.data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2918 (SB_DFF): \processor.mem_wb_reg.data_out [73] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2919 (SB_DFF): \processor.mem_wb_reg.data_out [74] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2920 (SB_DFF): \processor.mem_wb_reg.data_out [75] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2921 (SB_DFF): \processor.mem_wb_reg.data_out [76] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2922 (SB_DFF): \processor.mem_wb_reg.data_out [77] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2923 (SB_DFF): \processor.mem_wb_reg.data_out [78] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2924 (SB_DFF): \processor.mem_wb_reg.data_out [79] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2925 (SB_DFF): \processor.mem_wb_reg.data_out [80] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2926 (SB_DFF): \processor.mem_wb_reg.data_out [81] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2927 (SB_DFF): \processor.mem_wb_reg.data_out [82] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2928 (SB_DFF): \processor.mem_wb_reg.data_out [83] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2929 (SB_DFF): \processor.mem_wb_reg.data_out [84] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2930 (SB_DFF): \processor.mem_wb_reg.data_out [85] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2931 (SB_DFF): \processor.mem_wb_reg.data_out [86] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2932 (SB_DFF): \processor.mem_wb_reg.data_out [87] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2933 (SB_DFF): \processor.mem_wb_reg.data_out [88] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2934 (SB_DFF): \processor.mem_wb_reg.data_out [89] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2935 (SB_DFF): \processor.mem_wb_reg.data_out [90] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2936 (SB_DFF): \processor.mem_wb_reg.data_out [91] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2937 (SB_DFF): \processor.mem_wb_reg.data_out [92] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2938 (SB_DFF): \processor.mem_wb_reg.data_out [93] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2939 (SB_DFF): \processor.mem_wb_reg.data_out [94] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2940 (SB_DFF): \processor.mem_wb_reg.data_out [95] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2941 (SB_DFF): \processor.mem_wb_reg.data_out [96] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2942 (SB_DFF): \processor.mem_wb_reg.data_out [97] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2943 (SB_DFF): \processor.mem_wb_reg.data_out [98] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2944 (SB_DFF): \processor.mem_wb_reg.data_out [99] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6747 (SB_DFF): \processor.ex_mem_reg.data_out [139] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6748 (SB_DFF): \processor.ex_mem_reg.data_out [140] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6749 (SB_DFF): \processor.ex_mem_reg.data_out [141] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6750 (SB_DFF): \processor.ex_mem_reg.data_out [142] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6751 (SB_DFF): \processor.ex_mem_reg.data_out [143] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6752 (SB_DFF): \processor.ex_mem_reg.data_out [144] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6753 (SB_DFF): \processor.ex_mem_reg.data_out [145] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6754 (SB_DFF): \processor.ex_mem_reg.data_out [146] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6755 (SB_DFF): \processor.ex_mem_reg.data_out [147] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6756 (SB_DFF): \processor.ex_mem_reg.data_out [148] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6757 (SB_DFF): \processor.ex_mem_reg.data_out [149] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6758 (SB_DFF): \processor.ex_mem_reg.data_out [150] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6759 (SB_DFF): \processor.ex_mem_reg.data_out [151] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6760 (SB_DFF): \processor.ex_mem_reg.data_out [152] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6761 (SB_DFF): \processor.ex_mem_reg.data_out [153] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6762 (SB_DFF): \processor.ex_mem_reg.data_out [154] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1918 (SB_DFFE): \data_mem_inst.clk_stall = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2961 (SB_DFF): \processor.mem_wb_reg.data_out [116] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3135 (SB_DFFE): \processor.PC.outAddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3136 (SB_DFFE): \processor.PC.outAddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3137 (SB_DFFE): \processor.PC.outAddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3138 (SB_DFFE): \processor.PC.outAddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3139 (SB_DFFE): \processor.PC.outAddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3140 (SB_DFFE): \processor.PC.outAddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3141 (SB_DFFE): \processor.PC.outAddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3142 (SB_DFFE): \processor.PC.outAddr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3143 (SB_DFFE): \processor.PC.outAddr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3144 (SB_DFFE): \processor.PC.outAddr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3145 (SB_DFFE): \processor.PC.outAddr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3146 (SB_DFFE): \processor.PC.outAddr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3147 (SB_DFFE): \processor.PC.outAddr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3148 (SB_DFFE): \processor.PC.outAddr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3149 (SB_DFFE): \processor.PC.outAddr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3150 (SB_DFFE): \processor.PC.outAddr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3151 (SB_DFFE): \processor.PC.outAddr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3152 (SB_DFFE): \processor.PC.outAddr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3153 (SB_DFFE): \processor.PC.outAddr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3154 (SB_DFFE): \processor.PC.outAddr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3155 (SB_DFFE): \processor.PC.outAddr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3156 (SB_DFFE): \processor.PC.outAddr [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3157 (SB_DFFE): \processor.PC.outAddr [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3158 (SB_DFFE): \processor.PC.outAddr [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3159 (SB_DFFE): \processor.PC.outAddr [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3160 (SB_DFFE): \processor.PC.outAddr [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3161 (SB_DFFE): \processor.PC.outAddr [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3162 (SB_DFFE): \processor.PC.outAddr [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3163 (SB_DFFE): \processor.PC.outAddr [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3164 (SB_DFFE): \processor.PC.outAddr [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3134 (SB_DFFE): \processor.PC.outAddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3165 (SB_DFFE): \processor.PC.outAddr [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3167 (SB_DFF): \processor.if_id_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3168 (SB_DFF): \processor.if_id_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3169 (SB_DFF): \processor.if_id_reg.data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3170 (SB_DFF): \processor.if_id_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3171 (SB_DFF): \processor.if_id_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3172 (SB_DFF): \processor.if_id_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3173 (SB_DFF): \processor.if_id_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3174 (SB_DFF): \processor.if_id_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3175 (SB_DFF): \processor.if_id_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3176 (SB_DFF): \processor.if_id_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3177 (SB_DFF): \processor.if_id_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3178 (SB_DFF): \processor.if_id_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3179 (SB_DFF): \processor.if_id_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3180 (SB_DFF): \processor.if_id_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3181 (SB_DFF): \processor.if_id_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3182 (SB_DFF): \processor.if_id_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3183 (SB_DFF): \processor.if_id_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3184 (SB_DFF): \processor.if_id_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3185 (SB_DFF): \processor.if_id_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3186 (SB_DFF): \processor.if_id_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3187 (SB_DFF): \processor.if_id_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3188 (SB_DFF): \processor.if_id_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3189 (SB_DFF): \processor.if_id_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3190 (SB_DFF): \processor.if_id_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3191 (SB_DFF): \processor.if_id_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3192 (SB_DFF): \processor.if_id_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3193 (SB_DFF): \processor.if_id_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3194 (SB_DFF): \processor.if_id_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3195 (SB_DFF): \processor.if_id_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3196 (SB_DFF): \processor.if_id_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3197 (SB_DFF): \processor.if_id_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3198 (SB_DFF): \processor.if_id_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3199 (SB_DFF): \processor.if_id_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3200 (SB_DFF): \processor.if_id_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3201 (SB_DFF): \processor.if_id_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3202 (SB_DFF): \processor.if_id_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3203 (SB_DFF): \processor.if_id_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2945 (SB_DFF): \processor.mem_wb_reg.data_out [100] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2946 (SB_DFF): \processor.mem_wb_reg.data_out [101] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2947 (SB_DFF): \processor.mem_wb_reg.data_out [102] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2948 (SB_DFF): \processor.mem_wb_reg.data_out [103] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3204 (SB_DFF): \processor.if_id_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3210 (SB_DFF): \processor.if_id_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3211 (SB_DFF): \processor.if_id_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3212 (SB_DFF): \processor.if_id_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3213 (SB_DFF): \processor.if_id_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3214 (SB_DFF): \processor.if_id_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3215 (SB_DFF): \processor.if_id_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3216 (SB_DFF): \processor.if_id_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2949 (SB_DFF): \processor.mem_wb_reg.data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2950 (SB_DFF): \processor.mem_wb_reg.data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2951 (SB_DFF): \processor.mem_wb_reg.data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2952 (SB_DFF): \processor.mem_wb_reg.data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2953 (SB_DFF): \processor.mem_wb_reg.data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2954 (SB_DFF): \processor.mem_wb_reg.data_out [109] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2955 (SB_DFF): \processor.mem_wb_reg.data_out [110] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2956 (SB_DFF): \processor.mem_wb_reg.data_out [111] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2957 (SB_DFF): \processor.mem_wb_reg.data_out [112] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2958 (SB_DFF): \processor.mem_wb_reg.data_out [113] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2959 (SB_DFF): \processor.mem_wb_reg.data_out [114] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2960 (SB_DFF): \processor.mem_wb_reg.data_out [115] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6614 (SB_DFF): \processor.ex_mem_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3369 (SB_DFFN): \processor.branch_predictor_FSM.branch_mem_sig_reg = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3217 (SB_DFF): \processor.if_id_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6610 (SB_DFF): \processor.ex_mem_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3371 (SB_DFFE): \processor.branch_predictor_FSM.s [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6746 (SB_DFF): \processor.ex_mem_reg.data_out [138] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4025 (SB_DFF): \processor.id_ex_reg.data_out [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4026 (SB_DFF): \processor.id_ex_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4027 (SB_DFF): \processor.id_ex_reg.data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4028 (SB_DFF): \processor.id_ex_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4029 (SB_DFF): \processor.id_ex_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4030 (SB_DFF): \processor.id_ex_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4031 (SB_DFF): \processor.id_ex_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4032 (SB_DFF): \processor.id_ex_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4033 (SB_DFF): \processor.id_ex_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4034 (SB_DFF): \processor.id_ex_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4035 (SB_DFF): \processor.id_ex_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4036 (SB_DFF): \processor.id_ex_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4037 (SB_DFF): \processor.id_ex_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4038 (SB_DFF): \processor.id_ex_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4039 (SB_DFF): \processor.id_ex_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4040 (SB_DFF): \processor.id_ex_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4041 (SB_DFF): \processor.id_ex_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4042 (SB_DFF): \processor.id_ex_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4043 (SB_DFF): \processor.id_ex_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4044 (SB_DFF): \processor.id_ex_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4045 (SB_DFF): \processor.id_ex_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4046 (SB_DFF): \processor.id_ex_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4047 (SB_DFF): \processor.id_ex_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4048 (SB_DFF): \processor.id_ex_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4049 (SB_DFF): \processor.id_ex_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4050 (SB_DFF): \processor.id_ex_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4051 (SB_DFF): \processor.id_ex_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4052 (SB_DFF): \processor.id_ex_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4053 (SB_DFF): \processor.id_ex_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4054 (SB_DFF): \processor.id_ex_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4055 (SB_DFF): \processor.id_ex_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4056 (SB_DFF): \processor.id_ex_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4057 (SB_DFF): \processor.id_ex_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4058 (SB_DFF): \processor.id_ex_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4059 (SB_DFF): \processor.id_ex_reg.data_out [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4060 (SB_DFF): \processor.id_ex_reg.data_out [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4061 (SB_DFF): \processor.id_ex_reg.data_out [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4062 (SB_DFF): \processor.id_ex_reg.data_out [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4063 (SB_DFF): \processor.id_ex_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4064 (SB_DFF): \processor.id_ex_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4065 (SB_DFF): \processor.id_ex_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4066 (SB_DFF): \processor.id_ex_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4067 (SB_DFF): \processor.id_ex_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4068 (SB_DFF): \processor.id_ex_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4069 (SB_DFF): \processor.id_ex_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4070 (SB_DFF): \processor.id_ex_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4071 (SB_DFF): \processor.id_ex_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4072 (SB_DFF): \processor.id_ex_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4073 (SB_DFF): \processor.id_ex_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4074 (SB_DFF): \processor.id_ex_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4075 (SB_DFF): \processor.id_ex_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4076 (SB_DFF): \processor.id_ex_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4077 (SB_DFF): \processor.id_ex_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4078 (SB_DFF): \processor.id_ex_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4079 (SB_DFF): \processor.id_ex_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4080 (SB_DFF): \processor.id_ex_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4081 (SB_DFF): \processor.id_ex_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4082 (SB_DFF): \processor.id_ex_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4083 (SB_DFF): \processor.id_ex_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4084 (SB_DFF): \processor.id_ex_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4085 (SB_DFF): \processor.id_ex_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4086 (SB_DFF): \processor.id_ex_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4087 (SB_DFF): \processor.id_ex_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4088 (SB_DFF): \processor.id_ex_reg.data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4089 (SB_DFF): \processor.id_ex_reg.data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4090 (SB_DFF): \processor.id_ex_reg.data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4091 (SB_DFF): \processor.id_ex_reg.data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4092 (SB_DFF): \processor.id_ex_reg.data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4093 (SB_DFF): \processor.id_ex_reg.data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4094 (SB_DFF): \processor.id_ex_reg.data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4095 (SB_DFF): \processor.id_ex_reg.data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4096 (SB_DFF): \processor.id_ex_reg.data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4097 (SB_DFF): \processor.id_ex_reg.data_out [73] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4098 (SB_DFF): \processor.id_ex_reg.data_out [74] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4099 (SB_DFF): \processor.id_ex_reg.data_out [75] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4100 (SB_DFF): \processor.id_ex_reg.data_out [76] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4101 (SB_DFF): \processor.id_ex_reg.data_out [77] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4102 (SB_DFF): \processor.id_ex_reg.data_out [78] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4103 (SB_DFF): \processor.id_ex_reg.data_out [79] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4104 (SB_DFF): \processor.id_ex_reg.data_out [80] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4105 (SB_DFF): \processor.id_ex_reg.data_out [81] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4106 (SB_DFF): \processor.id_ex_reg.data_out [82] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4107 (SB_DFF): \processor.id_ex_reg.data_out [83] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4108 (SB_DFF): \processor.id_ex_reg.data_out [84] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4109 (SB_DFF): \processor.id_ex_reg.data_out [85] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFF): \processor.id_ex_reg.data_out [86] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4111 (SB_DFF): \processor.id_ex_reg.data_out [87] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4112 (SB_DFF): \processor.id_ex_reg.data_out [88] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4113 (SB_DFF): \processor.id_ex_reg.data_out [89] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4114 (SB_DFF): \processor.id_ex_reg.data_out [90] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4115 (SB_DFF): \processor.id_ex_reg.data_out [91] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4116 (SB_DFF): \processor.id_ex_reg.data_out [92] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4117 (SB_DFF): \processor.id_ex_reg.data_out [93] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4118 (SB_DFF): \processor.id_ex_reg.data_out [94] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4119 (SB_DFF): \processor.id_ex_reg.data_out [95] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4120 (SB_DFF): \processor.id_ex_reg.data_out [96] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4121 (SB_DFF): \processor.id_ex_reg.data_out [97] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4122 (SB_DFF): \processor.id_ex_reg.data_out [98] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4123 (SB_DFF): \processor.id_ex_reg.data_out [99] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4124 (SB_DFF): \processor.id_ex_reg.data_out [100] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4125 (SB_DFF): \processor.id_ex_reg.data_out [101] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4126 (SB_DFF): \processor.id_ex_reg.data_out [102] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4127 (SB_DFF): \processor.id_ex_reg.data_out [103] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4128 (SB_DFF): \processor.id_ex_reg.data_out [104] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4129 (SB_DFF): \processor.id_ex_reg.data_out [105] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4130 (SB_DFF): \processor.id_ex_reg.data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4131 (SB_DFF): \processor.id_ex_reg.data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4132 (SB_DFF): \processor.id_ex_reg.data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4133 (SB_DFF): \processor.id_ex_reg.data_out [109] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4134 (SB_DFF): \processor.id_ex_reg.data_out [110] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4135 (SB_DFF): \processor.id_ex_reg.data_out [111] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4136 (SB_DFF): \processor.id_ex_reg.data_out [112] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4137 (SB_DFF): \processor.id_ex_reg.data_out [113] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4138 (SB_DFF): \processor.id_ex_reg.data_out [114] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4139 (SB_DFF): \processor.id_ex_reg.data_out [115] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4140 (SB_DFF): \processor.id_ex_reg.data_out [116] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4141 (SB_DFF): \processor.id_ex_reg.data_out [117] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4142 (SB_DFF): \processor.id_ex_reg.data_out [118] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4143 (SB_DFF): \processor.id_ex_reg.data_out [119] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4144 (SB_DFF): \processor.id_ex_reg.data_out [120] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4145 (SB_DFF): \processor.id_ex_reg.data_out [121] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4146 (SB_DFF): \processor.id_ex_reg.data_out [122] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4147 (SB_DFF): \processor.id_ex_reg.data_out [123] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4148 (SB_DFF): \processor.id_ex_reg.data_out [124] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4149 (SB_DFF): \processor.id_ex_reg.data_out [125] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4150 (SB_DFF): \processor.id_ex_reg.data_out [126] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4151 (SB_DFF): \processor.id_ex_reg.data_out [127] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4152 (SB_DFF): \processor.id_ex_reg.data_out [128] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4153 (SB_DFF): \processor.id_ex_reg.data_out [129] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4154 (SB_DFF): \processor.id_ex_reg.data_out [130] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4155 (SB_DFF): \processor.id_ex_reg.data_out [131] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4156 (SB_DFF): \processor.id_ex_reg.data_out [132] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4157 (SB_DFF): \processor.id_ex_reg.data_out [133] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4158 (SB_DFF): \processor.id_ex_reg.data_out [134] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4159 (SB_DFF): \processor.id_ex_reg.data_out [135] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4160 (SB_DFF): \processor.id_ex_reg.data_out [136] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4161 (SB_DFF): \processor.id_ex_reg.data_out [137] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3229 (SB_DFF): \processor.if_id_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4162 (SB_DFF): \processor.id_ex_reg.data_out [138] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4164 (SB_DFF): \processor.id_ex_reg.data_out [140] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4165 (SB_DFF): \processor.id_ex_reg.data_out [141] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4166 (SB_DFF): \processor.id_ex_reg.data_out [142] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4167 (SB_DFF): \processor.id_ex_reg.data_out [143] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4168 (SB_DFF): \processor.id_ex_reg.data_out [144] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4169 (SB_DFF): \processor.id_ex_reg.data_out [145] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4170 (SB_DFF): \processor.id_ex_reg.data_out [146] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4172 (SB_DFF): \processor.id_ex_reg.data_out [148] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4173 (SB_DFF): \processor.id_ex_reg.data_out [149] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3205 (SB_DFF): \processor.if_id_reg.data_out [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3206 (SB_DFF): \processor.if_id_reg.data_out [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3207 (SB_DFF): \processor.if_id_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3208 (SB_DFF): \processor.if_id_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3209 (SB_DFF): \processor.if_id_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4174 (SB_DFF): \processor.id_ex_reg.data_out [150] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4180 (SB_DFF): \processor.id_ex_reg.data_out [156] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4181 (SB_DFF): \processor.id_ex_reg.data_out [157] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4182 (SB_DFF): \processor.id_ex_reg.data_out [158] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4183 (SB_DFF): \processor.id_ex_reg.data_out [159] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4184 (SB_DFF): \processor.id_ex_reg.data_out [160] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4185 (SB_DFF): \processor.id_ex_reg.data_out [161] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4186 (SB_DFF): \processor.id_ex_reg.data_out [162] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4187 (SB_DFF): \processor.id_ex_reg.data_out [163] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4188 (SB_DFF): \processor.id_ex_reg.data_out [164] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3218 (SB_DFF): \processor.if_id_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3219 (SB_DFF): \processor.if_id_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3220 (SB_DFF): \processor.if_id_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3221 (SB_DFF): \processor.if_id_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3222 (SB_DFF): \processor.if_id_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3223 (SB_DFF): \processor.if_id_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3224 (SB_DFF): \processor.if_id_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3225 (SB_DFF): \processor.if_id_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3226 (SB_DFF): \processor.if_id_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3227 (SB_DFF): \processor.if_id_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3228 (SB_DFF): \processor.if_id_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4024 (SB_DFF): \processor.id_ex_reg.data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6608 (SB_DFF): \processor.ex_mem_reg.data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3370 (SB_DFFE): \processor.branch_predictor_FSM.s [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2847 (SB_DFF): \processor.mem_wb_reg.data_out [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3166 (SB_DFF): \processor.if_id_reg.data_out [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4189 (SB_DFF): \processor.id_ex_reg.data_out [165] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6615 (SB_DFF): \processor.ex_mem_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6616 (SB_DFF): \processor.ex_mem_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6649 (SB_DFF): \processor.ex_mem_reg.data_out [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6650 (SB_DFF): \processor.ex_mem_reg.data_out [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6651 (SB_DFF): \processor.ex_mem_reg.data_out [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6652 (SB_DFF): \processor.ex_mem_reg.data_out [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6653 (SB_DFF): \processor.ex_mem_reg.data_out [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6654 (SB_DFF): \processor.ex_mem_reg.data_out [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6655 (SB_DFF): \processor.ex_mem_reg.data_out [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6656 (SB_DFF): \processor.ex_mem_reg.data_out [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6657 (SB_DFF): \processor.ex_mem_reg.data_out [49] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6658 (SB_DFF): \processor.ex_mem_reg.data_out [50] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6659 (SB_DFF): \processor.ex_mem_reg.data_out [51] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6660 (SB_DFF): \processor.ex_mem_reg.data_out [52] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6661 (SB_DFF): \processor.ex_mem_reg.data_out [53] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6662 (SB_DFF): \processor.ex_mem_reg.data_out [54] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6663 (SB_DFF): \processor.ex_mem_reg.data_out [55] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6664 (SB_DFF): \processor.ex_mem_reg.data_out [56] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6665 (SB_DFF): \processor.ex_mem_reg.data_out [57] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6666 (SB_DFF): \processor.ex_mem_reg.data_out [58] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6667 (SB_DFF): \processor.ex_mem_reg.data_out [59] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6668 (SB_DFF): \processor.ex_mem_reg.data_out [60] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6669 (SB_DFF): \processor.ex_mem_reg.data_out [61] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6670 (SB_DFF): \processor.ex_mem_reg.data_out [62] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6671 (SB_DFF): \processor.ex_mem_reg.data_out [63] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6672 (SB_DFF): \processor.ex_mem_reg.data_out [64] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6673 (SB_DFF): \processor.ex_mem_reg.data_out [65] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6674 (SB_DFF): \processor.ex_mem_reg.data_out [66] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6675 (SB_DFF): \processor.ex_mem_reg.data_out [67] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6676 (SB_DFF): \processor.ex_mem_reg.data_out [68] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6677 (SB_DFF): \processor.ex_mem_reg.data_out [69] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6678 (SB_DFF): \processor.ex_mem_reg.data_out [70] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6679 (SB_DFF): \processor.ex_mem_reg.data_out [71] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6680 (SB_DFF): \processor.ex_mem_reg.data_out [72] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2848 (SB_DFF): \processor.mem_wb_reg.data_out [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2849 (SB_DFF): \processor.mem_wb_reg.data_out [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2850 (SB_DFF): \processor.mem_wb_reg.data_out [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2851 (SB_DFF): \processor.mem_wb_reg.data_out [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2852 (SB_DFF): \processor.mem_wb_reg.data_out [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2853 (SB_DFF): \processor.mem_wb_reg.data_out [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2854 (SB_DFF): \processor.mem_wb_reg.data_out [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2855 (SB_DFF): \processor.mem_wb_reg.data_out [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2856 (SB_DFF): \processor.mem_wb_reg.data_out [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2857 (SB_DFF): \processor.mem_wb_reg.data_out [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2858 (SB_DFF): \processor.mem_wb_reg.data_out [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2859 (SB_DFF): \processor.mem_wb_reg.data_out [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2860 (SB_DFF): \processor.mem_wb_reg.data_out [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2861 (SB_DFF): \processor.mem_wb_reg.data_out [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2862 (SB_DFF): \processor.mem_wb_reg.data_out [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2863 (SB_DFF): \processor.mem_wb_reg.data_out [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2864 (SB_DFF): \processor.mem_wb_reg.data_out [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2865 (SB_DFF): \processor.mem_wb_reg.data_out [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2866 (SB_DFF): \processor.mem_wb_reg.data_out [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2867 (SB_DFF): \processor.mem_wb_reg.data_out [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2868 (SB_DFF): \processor.mem_wb_reg.data_out [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2869 (SB_DFF): \processor.mem_wb_reg.data_out [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2870 (SB_DFF): \processor.mem_wb_reg.data_out [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2871 (SB_DFF): \processor.mem_wb_reg.data_out [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2872 (SB_DFF): \processor.mem_wb_reg.data_out [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2873 (SB_DFF): \processor.mem_wb_reg.data_out [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2874 (SB_DFF): \processor.mem_wb_reg.data_out [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2875 (SB_DFF): \processor.mem_wb_reg.data_out [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2876 (SB_DFF): \processor.mem_wb_reg.data_out [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2877 (SB_DFF): \processor.mem_wb_reg.data_out [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2878 (SB_DFF): \processor.mem_wb_reg.data_out [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2879 (SB_DFF): \processor.mem_wb_reg.data_out [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6681 (SB_DFF): \processor.ex_mem_reg.data_out [73] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6714 (SB_DFF): \processor.ex_mem_reg.data_out [106] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6715 (SB_DFF): \processor.ex_mem_reg.data_out [107] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6716 (SB_DFF): \processor.ex_mem_reg.data_out [108] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6717 (SB_DFF): \processor.ex_mem_reg.data_out [109] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6718 (SB_DFF): \processor.ex_mem_reg.data_out [110] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6719 (SB_DFF): \processor.ex_mem_reg.data_out [111] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6720 (SB_DFF): \processor.ex_mem_reg.data_out [112] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6721 (SB_DFF): \processor.ex_mem_reg.data_out [113] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6722 (SB_DFF): \processor.ex_mem_reg.data_out [114] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6723 (SB_DFF): \processor.ex_mem_reg.data_out [115] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6724 (SB_DFF): \processor.ex_mem_reg.data_out [116] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6725 (SB_DFF): \processor.ex_mem_reg.data_out [117] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6726 (SB_DFF): \processor.ex_mem_reg.data_out [118] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6727 (SB_DFF): \processor.ex_mem_reg.data_out [119] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6728 (SB_DFF): \processor.ex_mem_reg.data_out [120] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6729 (SB_DFF): \processor.ex_mem_reg.data_out [121] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6730 (SB_DFF): \processor.ex_mem_reg.data_out [122] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6731 (SB_DFF): \processor.ex_mem_reg.data_out [123] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6732 (SB_DFF): \processor.ex_mem_reg.data_out [124] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6733 (SB_DFF): \processor.ex_mem_reg.data_out [125] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6734 (SB_DFF): \processor.ex_mem_reg.data_out [126] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6735 (SB_DFF): \processor.ex_mem_reg.data_out [127] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6736 (SB_DFF): \processor.ex_mem_reg.data_out [128] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6737 (SB_DFF): \processor.ex_mem_reg.data_out [129] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6738 (SB_DFF): \processor.ex_mem_reg.data_out [130] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6739 (SB_DFF): \processor.ex_mem_reg.data_out [131] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6740 (SB_DFF): \processor.ex_mem_reg.data_out [132] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6741 (SB_DFF): \processor.ex_mem_reg.data_out [133] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6742 (SB_DFF): \processor.ex_mem_reg.data_out [134] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6743 (SB_DFF): \processor.ex_mem_reg.data_out [135] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6744 (SB_DFF): \processor.ex_mem_reg.data_out [136] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4175 (SB_DFF): \processor.id_ex_reg.data_out [151] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4176 (SB_DFF): \processor.id_ex_reg.data_out [152] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4177 (SB_DFF): \processor.id_ex_reg.data_out [153] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4178 (SB_DFF): \processor.id_ex_reg.data_out [154] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4179 (SB_DFF): \processor.id_ex_reg.data_out [155] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4190 (SB_DFF): \processor.id_ex_reg.data_out [166] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4191 (SB_DFF): \processor.id_ex_reg.data_out [167] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4192 (SB_DFF): \processor.id_ex_reg.data_out [168] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4193 (SB_DFF): \processor.id_ex_reg.data_out [169] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4194 (SB_DFF): \processor.id_ex_reg.data_out [170] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4195 (SB_DFF): \processor.id_ex_reg.data_out [171] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4196 (SB_DFF): \processor.id_ex_reg.data_out [172] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4197 (SB_DFF): \processor.id_ex_reg.data_out [173] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4198 (SB_DFF): \processor.id_ex_reg.data_out [174] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4199 (SB_DFF): \processor.id_ex_reg.data_out [175] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4200 (SB_DFF): \processor.id_ex_reg.data_out [176] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4163 (SB_DFF): \processor.id_ex_reg.data_out [139] = 0

19.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$6603 (A=\processor.id_ex_reg.data_out [4], B=1'0, S=\processor.ex_cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$1852 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6604 (A=\processor.id_ex_reg.data_out [5], B=1'0, S=\processor.ex_cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$1853 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6600 (A=\processor.id_ex_reg.data_out [1], B=1'0, S=\processor.ex_cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$6609 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6602 (A=\processor.id_ex_reg.data_out [3], B=1'0, S=\processor.ex_cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$6611 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2968 (A=\inst_mem.read_data [0], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3198 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2969 (A=\inst_mem.read_data [1], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3199 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2970 (A=\inst_mem.read_data [2], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3200 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2971 (A=\inst_mem.read_data [3], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3201 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2972 (A=\inst_mem.read_data [4], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3202 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2973 (A=\inst_mem.read_data [5], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3203 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2974 (A=\inst_mem.read_data [6], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3204 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2980 (A=\inst_mem.read_data [12], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3210 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2981 (A=\inst_mem.read_data [13], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3211 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2982 (A=\inst_mem.read_data [14], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3212 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2983 (A=\inst_mem.read_data [15], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3213 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2984 (A=\inst_mem.read_data [16], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3214 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2985 (A=\inst_mem.read_data [17], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3215 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2986 (A=\inst_mem.read_data [18], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3216 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6605 (A=\processor.id_ex_reg.data_out [6], B=1'0, S=\processor.ex_cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$6614 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2987 (A=\inst_mem.read_data [19], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3217 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6601 (A=\processor.id_ex_reg.data_out [2], B=1'0, S=\processor.ex_cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$6610 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2989 (A=\inst_mem.read_data [21], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3472 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2990 (A=\inst_mem.read_data [22], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3473 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2991 (A=\inst_mem.read_data [23], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3474 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2988 (A=\inst_mem.read_data [20], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3471 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2992 (A=\inst_mem.read_data [24], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3475 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2984 (A=\inst_mem.read_data [16], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3477 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2985 (A=\inst_mem.read_data [17], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3478 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2986 (A=\inst_mem.read_data [18], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3479 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2983 (A=\inst_mem.read_data [15], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3476 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2987 (A=\inst_mem.read_data [19], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3480 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3359 (A=\processor.MemtoReg1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4025 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3360 (A=\processor.RegWrite1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4026 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3361 (A=\processor.CSRR_signal, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4027 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3362 (A=\processor.MemWrite1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4028 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3363 (A=\processor.MemRead1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4029 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3364 (A=\processor.Branch1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4030 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3365 (A=\processor.Auipc1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4032 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3366 (A=\processor.Lui1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4033 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3367 (A=\processor.ALUSrc1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4034 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3368 (A=\processor.Jalr1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4035 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3631 (A=\processor.RegA_mux.input0 [5], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4073 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3632 (A=\processor.RegA_mux.input0 [6], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4074 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3633 (A=\processor.RegA_mux.input0 [7], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4075 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3634 (A=\processor.RegA_mux.input0 [8], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4076 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3635 (A=\processor.RegA_mux.input0 [9], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4077 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3636 (A=\processor.RegA_mux.input0 [10], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4078 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3637 (A=\processor.RegA_mux.input0 [11], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4079 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3638 (A=\processor.RegA_mux.input0 [12], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4080 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3639 (A=\processor.RegA_mux.input0 [13], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4081 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3640 (A=\processor.RegA_mux.input0 [14], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4082 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3641 (A=\processor.RegA_mux.input0 [15], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4083 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3642 (A=\processor.RegA_mux.input0 [16], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4084 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3643 (A=\processor.RegA_mux.input0 [17], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4085 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3644 (A=\processor.RegA_mux.input0 [18], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4086 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3645 (A=\processor.RegA_mux.input0 [19], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4087 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3646 (A=\processor.RegA_mux.input0 [20], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4088 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3647 (A=\processor.RegA_mux.input0 [21], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4089 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3648 (A=\processor.RegA_mux.input0 [22], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4090 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3649 (A=\processor.RegA_mux.input0 [23], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4091 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3650 (A=\processor.RegA_mux.input0 [24], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4092 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3651 (A=\processor.RegA_mux.input0 [25], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4093 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3652 (A=\processor.RegA_mux.input0 [26], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4094 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3653 (A=\processor.RegA_mux.input0 [27], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4095 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3654 (A=\processor.RegA_mux.input0 [28], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4096 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3655 (A=\processor.RegA_mux.input0 [29], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4097 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3656 (A=\processor.RegA_mux.input0 [30], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4098 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3657 (A=\processor.RegA_mux.input0 [31], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4099 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2999 (A=\inst_mem.read_data [31], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3229 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8361 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$3737_Y, S=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$3728_Y) into $auto$simplemap.cc:420:simplemap_dff$4164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8362 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$3738_Y, S=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$3728_Y) into $auto$simplemap.cc:420:simplemap_dff$4165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8363 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$3739_Y, S=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$3728_Y) into $auto$simplemap.cc:420:simplemap_dff$4166 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8364 (A=1'1, B=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$3740_Y, S=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$3728_Y) into $auto$simplemap.cc:420:simplemap_dff$4167 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8365 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$8267 [2], S=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$3728_Y) into $auto$simplemap.cc:420:simplemap_dff$4168 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8366 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$8258 [2], S=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$3728_Y) into $auto$simplemap.cc:420:simplemap_dff$4169 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8367 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$8249 [2], S=$techmap$techmap\processor.alu_control.$procmux$871.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$3728_Y) into $auto$simplemap.cc:420:simplemap_dff$4170 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8011 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$7993, S=$techmap$techmap\processor.sign_mask_gen_inst.$procmux$630.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$3666_Y) into $auto$simplemap.cc:420:simplemap_dff$4172 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8012 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$7989, S=$techmap$techmap\processor.sign_mask_gen_inst.$procmux$630.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$3666_Y) into $auto$simplemap.cc:420:simplemap_dff$4173 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2975 (A=\inst_mem.read_data [7], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3205 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2976 (A=\inst_mem.read_data [8], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3206 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2977 (A=\inst_mem.read_data [9], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3207 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2978 (A=\inst_mem.read_data [10], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3208 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2979 (A=\inst_mem.read_data [11], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3209 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3393 (A=\processor.if_id_reg.data_out [47], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4180 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3394 (A=\processor.if_id_reg.data_out [48], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4181 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3395 (A=\processor.if_id_reg.data_out [49], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4182 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3396 (A=\processor.if_id_reg.data_out [50], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4183 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3397 (A=\processor.if_id_reg.data_out [51], B=1'0, S=\processor.RegA_AddrFwdFlush_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4184 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3388 (A=\processor.if_id_reg.data_out [52], B=1'0, S=\processor.CSRR_signal) into $auto$simplemap.cc:420:simplemap_dff$4185 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3389 (A=\processor.if_id_reg.data_out [53], B=1'0, S=\processor.CSRR_signal) into $auto$simplemap.cc:420:simplemap_dff$4186 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3390 (A=\processor.if_id_reg.data_out [54], B=1'0, S=\processor.CSRR_signal) into $auto$simplemap.cc:420:simplemap_dff$4187 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3391 (A=\processor.if_id_reg.data_out [55], B=1'0, S=\processor.CSRR_signal) into $auto$simplemap.cc:420:simplemap_dff$4188 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2988 (A=\inst_mem.read_data [20], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2989 (A=\inst_mem.read_data [21], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2990 (A=\inst_mem.read_data [22], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2991 (A=\inst_mem.read_data [23], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3221 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2992 (A=\inst_mem.read_data [24], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2993 (A=\inst_mem.read_data [25], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3223 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2994 (A=\inst_mem.read_data [26], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3224 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2995 (A=\inst_mem.read_data [27], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3225 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2996 (A=\inst_mem.read_data [28], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3226 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2997 (A=\inst_mem.read_data [29], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3227 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$2998 (A=\inst_mem.read_data [30], B=1'0, S=\processor.inst_mux.select) into $auto$simplemap.cc:420:simplemap_dff$3228 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3358 (A=\processor.Jump1, B=1'0, S=\processor.cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$4024 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6599 (A=\processor.id_ex_reg.data_out [0], B=1'0, S=\processor.ex_cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$6608 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3392 (A=\processor.if_id_reg.data_out [56], B=1'0, S=\processor.CSRR_signal) into $auto$simplemap.cc:420:simplemap_dff$4189 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6606 (A=\processor.id_ex_reg.data_out [7], B=1'0, S=\processor.ex_cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$6615 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6607 (A=\processor.id_ex_reg.data_out [8], B=1'0, S=\processor.ex_cont_mux.select) into $auto$simplemap.cc:420:simplemap_dff$6616 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9429 (A=1'0, B=$techmap$techmap\processor.alu_main.$procmux$736.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:476$6319_Y, S=$techmap$techmap\processor.alu_main.$procmux$736.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$6311_Y) into $auto$simplemap.cc:420:simplemap_dff$6681 (SB_DFF).

19.40. Executing ICE40_OPT pass (performing simple optimizations).

19.40.1. Running ICE40 specific optimizations.

19.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~73 debug messages>

19.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~903 debug messages>
Removed a total of 301 cells.

19.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

19.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 81 unused cells and 3293 unused wires.
<suppressed ~84 debug messages>

19.40.6. Rerunning OPT passes. (Removed registers in this run.)

19.40.7. Running ICE40 specific optimizations.

19.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~92 debug messages>

19.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

19.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.40.12. Rerunning OPT passes. (Removed registers in this run.)

19.40.13. Running ICE40 specific optimizations.

19.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

19.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

19.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

19.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

19.40.18. Finished OPT passes. (There is nothing left to do.)

19.41. Executing TECHMAP pass (map to technology primitives).

19.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

19.41.2. Continuing TECHMAP pass.
No more expansions possible.

19.42. Executing ABC pass (technology mapping using ABC).

19.42.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 3431 gates and 4355 wires to a netlist network with 922 inputs and 608 outputs.

19.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1061.
ABC: Participating nodes from both networks       =    2533.
ABC: Participating nodes from the first network   =    1186. (  65.78 % of nodes)
ABC: Participating nodes from the second network  =    1347. (  74.71 % of nodes)
ABC: Node pairs (any polarity)                    =    1185. (  65.72 % of names can be moved)
ABC: Node pairs (same polarity)                   =     739. (  40.99 % of names can be moved)
ABC: Total runtime =     0.05 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1742
ABC RESULTS:        internal signals:     2825
ABC RESULTS:           input signals:      922
ABC RESULTS:          output signals:      608
Removing temp directory.

19.43. Executing ICE40_WRAPCARRY pass (wrap carries).

19.44. Executing TECHMAP pass (map to technology primitives).

19.44.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

19.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 68 unused cells and 2206 unused wires.

19.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1899
  1-LUT               66
  2-LUT              202
  3-LUT              868
  4-LUT              763

Eliminating LUTs.
Number of LUTs:     1899
  1-LUT               66
  2-LUT              202
  3-LUT              868
  4-LUT              763

Combining LUTs.
Number of LUTs:     1897
  1-LUT               66
  2-LUT              201
  3-LUT              865
  4-LUT              765

Eliminated 0 LUTs.
Combined 2 LUTs.
<suppressed ~10925 debug messages>

19.46. Executing TECHMAP pass (map to technology primitives).

19.46.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

19.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001110100101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001111001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010111000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101011111010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000010110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000001 for cells of type $lut.
No more expansions possible.
<suppressed ~3834 debug messages>
Removed 0 unused cells and 3795 unused wires.

19.47. Executing AUTONAME pass.
Renamed 19909 objects in module top (41 iterations).
<suppressed ~4252 debug messages>

19.48. Executing HIERARCHY pass (managing design hierarchy).

19.48.1. Analyzing design hierarchy..
Top module:  \top

19.48.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

19.49. Printing statistics.

=== top ===

   Number of wires:               1657
   Number of wire bits:           7793
   Number of public wires:        1657
   Number of public wire bits:    7793
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2889
     SB_CARRY                      216
     SB_DFF                        418
     SB_DFFE                       219
     SB_DFFESR                       2
     SB_DFFN                         1
     SB_DFFSR                      103
     SB_DFFSS                        4
     SB_HFOSC                        1
     SB_LUT4                      1897
     SB_RAM40_4K                    28

19.50. Executing CHECK pass (checking for obvious problems).
checking module top..
Warning: Wire top.processor.alu_main.ALUOut has an unprocessed 'init' attribute.
Warning: Wire top.processor.immediate_generator.imm has an unprocessed 'init' attribute.
found and reported 2 problems.

19.51. Executing BLIF backend.

20. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 5b99714284, CPU: user 2.31s system 0.26s, MEM: 323.35 MB peak
Yosys 0.9+2406 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 30% 7x techmap (0 sec), 13% 23x opt_expr (0 sec), ...
